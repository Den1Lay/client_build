{"version":3,"sources":["serviceWorker.js","utils/notification.js","utils/mineInd.js","utils/index.js","store/reducers/main.js","store/reducers/user.js","store/reducers/index.js","store/index.js","containers/Notes/index.jsx","components/Input/index.jsx","components/Pod/index.jsx","components/Button/index.jsx","components/Mentions/index.jsx","components/Answers/index.jsx","components/AccessSelect/index.jsx","components/AddToCompadre/index.jsx","components/ArtPart/index.jsx","components/BoxImage/index.jsx","components/Leaf/index.jsx","components/Directions/index.jsx","components/CheckTags/index.jsx","actions/main.js","core/axios.js","core/api/auth.js","core/socket.js","actions/network.js","containers/Main/elements/Editor.jsx","containers/Main/elements/Project.jsx","containers/Main/elements/Version.jsx","containers/Main/elements/Social.jsx","containers/Main/Profile/index.jsx","containers/Main/index.jsx","containers/Navbar/elements/Branch.jsx","containers/Navbar/elements/Main.jsx","containers/Navbar/elements/Social.jsx","containers/Navbar/index.jsx","containers/Branch/index.jsx","containers/Login/index.jsx","containers/Map/index.jsx","utils/fakeWorker.js","pages/Base/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","openNotification","type","message","description","notification","mineInd","source","etalon","key","mod","i","Array","isArray","base","keyPath","slice","length","shift","natSource","upFirstSimbol","word","toUpperCase","substring","defState","format","Date","projectsCoordsData","projects","workPerson","workPCD","workBranch","mapStore","mapGrid","mapCurrent","availablePayload","users","personObj","friends","mainPlace","date","nickname","avatar","lastProject","combineReducers","main","state","action","payload","random","returnError","branch","v","checkBottomData","successMove","workVersion","height","question","reduxHistory","push","wayId","v4","versionId","projectId","name","access","superAccess","unshift","superId","versions","comment","master","illustrations","ways","color","wayDirection","data","pos","branchDirection","coord","path","label","picture","src","alt","choseCount","firstVSId","concat","userData","myLastProject","projectInd","checkId","target","store","forEach","id","includes","kicked","superKicked","newObservers","newEditord","localStorage","token","applicantList","filter","console","log","address","connected","dls","person","friendInd","friendV","versionInd","realProjectInd","realVersionInd","pathReducer","pcdInd","updateWithDeleteWorkDirFlag","splice","pass","nickName","newIllust","PCDInd","event","all","myId","accessCopy","superAccessCopy","freshCopy","freshSuperCopy","accessV","personId","project","myNickName","newIllustration","dataExample","dataClone","FastClone","factory","newVersionInd","PCDFactory","mainPart","artsDesription","answers","artSrc","selectedType","realWorkBranch","currentHeight","updateAnswers","content","ref","isNewBranch","hasOwnProperty","ans","zeroBase","map","el","firstPart","secondPart","newCurrentHeight","isFriend","some","workFriendInd","restartData","firstVersionId","workHeight","wPCDInd","chooseProjectFlag","projectsCoordInd","deepFriendInd","lastMyProjectInFriend","time","timeEnd","lastPerson","lockInd","Math","user","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","next","Notes","className","InputBase","width","place","placeholder","changeHandler","value","readOnly","isPassword","props","style","onChange","ev","classNames","Password","Pod","actived","onPlus","onDelete","onChoose","showDelete","onAction","onClick","stopPropagation","deleteHandl","DeleteOutlined","PlusOutlined","rows","ButtonBase","children","clickHandler","isCircle","disabled","htmlType","shape","MentionsBase","row","TabPane","Tabs","Answers","setAnswers","setActiveKey","Events","addProps","arr","closable","remove","targetKey","newActiveKey","newPanes","workInd","panes","activeKey","this","add","wayColor","questionChangeHandl","refChangeHandl","persist","refData","onEdit","pane","tab","margin","Option","Select","connect","defData","isCreate","isSuper","options","superIdToNick","supers","nicks","sup","mode","defaultValue","optionLabelProp","AddToCompadre","projectCount","onAdd","ArtPart","Tag","CheckableTag","Upload","Dragger","mentionsHandler","fileHandler","unsetIllust","setIllust","removeIllust","useState","workPlace","setWorkPlace","checkTabsProps","firstVal","firstHandler","secondVal","secondHandler","checkData","placement","title","onConfirm","okText","cancelText","display","htmlFor","FileAddOutlined","fontSize","marginBottom","cursor","showSearch","BoxImage","wrapperRef","useRef","pictureRef","sizes","setSizes","workSrc","setWorkSrc","restart","setRestart","show","setShow","useEffect","current","pH","naturalHeight","pW","naturalWidth","wH","offsetHeight","wW","offsetWidth","opacity","Leaf","connects","originBoost","boost","neighbourBoost","bottom","top","getConnects","Directions","branchHandler","wayHandler","checkTagsProps","CheckTags","flex","checked","addProject","openPlace","addFriend","changeBranch","changeMaster","choosePerson","accessControl","updateData","axios","defaults","baseURL","origin","headers","common","sendErrors","post","then","socket","io","transports","on","dispatch","sender","getState","fsID","fnN","lastV","subscribe","freshState","pcd","avPayload","emit","projectData","dataInit","effecter","status","msg","isTokenLogin","accessed","superAccessed","targetAccess","paths","savePod","setIllustrations","setSelectedType","setData","checkHeight","checkPath","checkCoord","setCheckCoord","saveState","setSaveState","currentPath","checkV","dataSource","newAnswers","noMaster","eventHandl","cb","cWayDirection","formData","FormData","workFile","files","dataType","split","newName","append","originUrl","realSrc","workIllust","personSId","res","isSetup","versionComment","isOwner","setupProject","saveVersion","setProjectData","versionData","setVersionData","getSuperId","superIdArr","nick","deleteHandler","AccessSelect","nickNames","addVersion","L","fL","updateUsers","previewPerson","cleanApplicantList","setPerson","personDetail","setPersonDetail","setUsers","newComrade","setNewComrade","newUsers","comrades","availableProjects","addCompadreHandl","friendObj","onSelect","userInd","logOut","component","setComponent","newPayload","Navbar_Branch","checkAccess","accesses","selectProject","selectVersion","undefined","makeMenu","addHandler","selectHandl","itemsArr","Item","justifyContent","flexDirection","overlay","onVisibleChange","chooseMe","avatarComp","me","friend","mySuperId","addPod","deletePod","choosePod","resData","realResData","podAction","fetchUserData","Promise","resolve","reject","JSON","parse","err","userLogin","auth","reqData","catch","autoLoginWithToken","er","createUser","login","password","secondPassword","AT","onMouseEnter","onMouseLeave","submitHandl","preventDefault","errors","error","prefix","href","onSubmit","workPos","setMapData","setMain","superData","maxPath","grid","promiseLessSeries","arrOfFunc","checker","isModif","isBoost","a","choses","sery","findAndSet","every","fill","reverse","fakeWorker","line","h","oldCoord","newCoord","l","oH","oL","nH","nL","cloneElement","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.582ccd28.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {notification} from 'antd'\r\n\r\nconst openNotification = ({type, message, description}) => {\r\n  notification[type]({\r\n    message,\r\n    description\r\n  });\r\n}\r\n\r\nexport default openNotification","function mineInd(source, etalon, key, mod) {\r\n  for(let i in source) {\r\n    const natSource = i => {\r\n        key = Array.isArray(key) ? key : [key]\r\n        let base = source[i];\r\n        let keyPath = key.slice();\r\n        while(keyPath.length) {\r\n          base = base[keyPath.shift()];\r\n        }\r\n        return base;\r\n    }\r\n    if(natSource(i) === etalon) {\r\n      mod[0] = i\r\n    }\r\n  }\r\n};\r\n\r\nexport default mineInd","export {default as openNotification} from './notification'\r\nexport {default as mineInd} from './mineInd'\r\nexport {default as boostWorker} from './boostWorker'\r\nexport {default as WebWorker} from './webWorker'\r\nexport {default as fakeWorker} from './fakeWorker'\r\n\r\nexport const upFirstSimbol = word => word[0].toUpperCase()+word.substring(1);","// Возможно тебе пригодится это когда ты вернешься спустя какое то время.. Проведи его АХУЕНННО!!\r\n// Рабочий процесс крутиться вокруг переменной workBranch, которая за счет модицирования project позволят редактировать ВСЕ\r\n// Главное это правильно выделить ее из нужно проекта, в этом тебе помогут mineInd и pathReducer. В дальнейшем рабочая вертка \r\n// взаимодействует с ProjectsCoordsData, из которой так же выделяется рабочий объект на основании прошлых проектов, юзеров.\r\n// Этот рабочий объект ответсвеннен за рабочую ветку и высоту. PCD хранит в себе данных проектов ВСЕХ Юзеров к которым ты притрагивался\r\n// При работе на акке друга детаются новые данные и происходит привязка к его комнате с последующей прослушкой всех его действий\r\n// отлавливанием их сокетами в core и модификацией... \r\n// Все данные имеют обратную совместимость так что баги с невозможностью найти индекс не должные происходить...\r\n// Только специально обрабатываемые.. при удалении.. Тоесть только 90 % таких событий должно быть отловлено в INIT подобных событиях\r\n// Не подгорай :)\r\n\r\n// Логика сеттеров начала прижимать фундаментальную диспатчевую логику. О БАЛ ДЕТЬ. смотри на работу илююстраций\r\n\r\n// Эффектная логика (обновление PCD( внутри person также), проектов, новые версии, проекты\r\n// setup(access), а также состояние мастера) просходит за счет накидывания приставок к workVersion.v\r\n// Новые версии отлавливаются и фильтруются, с последующими вызовами сокет эвентов.\r\n// Они же отлавливаются уже на сервере и там проиходит обновленние данных юзера уже в users.json. Много эвентов\r\n// производят обратный вызов, которые отлавливаются всеми кто в комнате. (нами тоже(филтрятся через sender))\r\n// \r\n\r\nimport {format} from 'date-fns';\r\nimport {v4} from 'uuid'\r\nimport FastClone from 'fastest-clone'\r\nimport {mineInd, openNotification} from '@/utils'\r\n\r\nconst projectsCoordData = [\r\n  {\r\n    projectId: 'uuid11',\r\n    workVersion: \"uuid12\",\r\n    \"uuid12\": {\r\n      path: \"0\",\r\n      height: 0\r\n    }\r\n  }\r\n]\r\n// просто манекены..\r\n// обновлять персон обжект здесь или получать новый с сервера... (я беру с сервера..) ..почистить код\r\nconst projects = [{\r\n  name: \"QWE\",  \r\n  description: \"QWE\",\r\n  superId: 'uuidentificator',\r\n  lastVersion: 0, // proj v || wb v\r\n  versions: [{\r\n  comment: 'Init',\r\n  date: format(new Date(), \"yyyy-MM-dd\"),\r\n  superId: 'uuid12',\r\n  master: 'NickName',\r\n  ways: [{wayId: 'uuv4maybe', wayDirection: 'Way to the other side of the river', color: 'black'}],\r\n  data: {\r\n    pos: \"0\",\r\n    wayId: 'uuv4maybe',\r\n    branch: {\r\n    branchDirection: '',\r\n    base: [{\r\n      coord: {\r\n        path: \"0\",\r\n        height: 0\r\n      },\r\n      label: '',\r\n      main: '',\r\n      comment: '',\r\n      picture: {\r\n        src: null,\r\n        alt: ''\r\n      }\r\n    }],\r\n    question: false,\r\n    choseCount: 0,\r\n    }\r\n  }\r\n}]}]\r\n\r\nconst defState = {\r\n  projectsCoordsData: [], // набор джентельмена\r\n  projects: false,\r\n  workPerson: null,\r\n  workPCD: null,\r\n  workBranch: null,\r\n  // currentBranch: \"0\",\r\n  // currentProject: 0,\r\n  // currentVersion: 0, // Кибер прах, помянем\r\n  // currentHeight: 0,\r\n  // workProject: 0,\r\n  mapStore: [],\r\n  mapGrid: [],  //Мап ресы\r\n  mapCurrent: '',\r\n  availablePayload: null,\r\n  users: [], // all exist users\r\n  personObj: null, // Всегда можно найти себя по этому адресу..\r\n  friends: [],\r\n  mainPlace: 'editor', // project save\r\n}\r\nlet date = format(new Date(), \"yyyy-MM-dd\"); \r\nexport default (state = defState, action) => {\r\n  const {type, payload, random} = action;\r\n  // function updatPersonObj() {\r\n  //   if(state.workPerson === state.personObj.userData.superId) {\r\n  //     state.personObj.projects = state.projects;\r\n  //     state.personObj.projectsCoordsData = state.projectsCoordsData;\r\n  //   }\r\n  // }\r\n  // Псевдо мидл\r\n  if(type !== 'CHANGE_BRANCH') { // DESTROY DIRTY MAP FIELDS, BECAUSE WE NEED FRESH\r\n    /// сделать сравние более лояльным может даже функцию с свичем замутить.\r\n    state.mapStore = [];\r\n    state.mapGrid = [];\r\n    state.mapCurrent = [];\r\n  }\r\n\r\n  (() => {\r\n    //const StateFactory = FastClone.factory(state);\r\n    if(!Array.isArray(window.reduxHistory)) {\r\n      window.reduxHistory = []\r\n    }\r\n    window.reduxHistory.push({\r\n      //state: new StateFactory(state), Он просто критически капризный \r\n      // картина будет восстанавливаться по Тайпам и пейлоадам...\r\n      type,\r\n      payload,\r\n    })\r\n  })()\r\n\r\n  function returnError () {\r\n    state.workBranch = {};\r\n    state.workPCD = null; //При нулеке появляется баг с обновлением даты, о того юзера, \r\n    // который кикнул\r\n    // c друго стороны есть праверка на PCD много где.\r\n    // Окей, предположим, что новых показателем качества рабочего процесса будет \r\n    // существование workBranch.branch.base\r\n    // на ребилде разделить перменные на те, что отвечате за редер и те, что отвечают \r\n    // за работу с данными.\r\n    state.workBranch.branch = {};\r\n    state.mainPlace = 'error';\r\n    state.workBranch.v = random;\r\n  }\r\n\r\n  function checkBottomData (successMove) {\r\n    if(state.workPCD[state.workPCD.workVersion].height === 'question') {\r\n      // Check exist question\r\n      if(state.workBranch.branch.question) {\r\n        successMove()\r\n        //state.mainPlace = 'editor'\r\n      } else {\r\n        returnError();\r\n      } \r\n    } else {\r\n      // Check exist pod...\r\n      if(state.workBranch.branch.base?.[state.workPCD[state.workPCD.workVersion].height] ?? false) {\r\n        successMove()\r\n        //state.mainPlace = 'editor'\r\n      } else {\r\n        returnError();\r\n      }\r\n    }\r\n  }\r\n\r\n  switch(type) {\r\n  \r\n    // И как интегрировать мидл???\r\n    case 'ADD_PROJECT': //wb.v\r\n    //disavaible middleware модификация pcd..\r\n\r\n      return (() => {\r\n\r\n        const wayId = v4(),\r\n        versionId = 'v'+v4(),\r\n        projectId = 'p'+v4(),\r\n        {name, description, access, superAccess} = payload;\r\n        state.projects.unshift({\r\n          name,  \r\n          description,\r\n          superId: projectId, \r\n          access,\r\n          superAccess,\r\n          versions: [{\r\n          comment: 'Init',\r\n          date,\r\n          superId: versionId,\r\n          master: null,\r\n          illustrations: [],\r\n          ways: [{wayId, color: 'green', wayDirection: ''}],\r\n          data: {\r\n            pos: \"0\",\r\n            wayId,\r\n            branch: {\r\n            branchDirection: '',\r\n            base: [{\r\n              coord: {\r\n                path: \"0\",\r\n                height: \"0\"\r\n              },\r\n              label: '',\r\n              main: '',\r\n              comment: '',\r\n              picture: {\r\n                src: null,\r\n                alt: ''\r\n              }\r\n            }],\r\n            question: false,\r\n            choseCount: 0,\r\n            }\r\n          }\r\n        }]});\r\n        let firstVSId = state.projects[0].versions[0].superId;\r\n        state.workPCD = {\r\n          projectId: state.projects[0].superId,\r\n          workVersion: firstVSId,\r\n          [firstVSId]: {\r\n            path: \"0\",\r\n            height: \"0\"\r\n          }\r\n        };\r\n        state.projectsCoordsData = [state.workPCD].concat(state.projectsCoordsData);\r\n        state.workBranch = state.projects[0].versions[0].data;\r\n        state.personObj.userData.myLastProject = state.projects[0].superId;\r\n        state.mainPlace = 'editor';\r\n        state.workBranch.v = 'n'+random;\r\n\r\n        //ТОТ САМЫЙ ОТДЕЛЬНЫЙ ХЕНДЛЕР\r\n        //updatPersonObj()\r\n          return {\r\n            ...state,\r\n          }\r\n      })();\r\n    case 'SETUP_PROJECT':\r\n      \r\n      return (() => {\r\n        const {name, description, access, superAccess} = payload\r\n\r\n        let projectInd;\r\n        for(let i in state.projects) {\r\n          if(state.projects[i].superId === state.workPCD.projectId) {\r\n            projectInd = i;\r\n          }\r\n        };\r\n        function checkId(source, target, store) {\r\n          source.forEach(id => {\r\n            if(!target.includes(id)) {\r\n              store.push(id)\r\n            }\r\n          })\r\n        }\r\n        let kicked = [];\r\n        let superKicked = [];\r\n        let newObservers = [];\r\n        let newEditord = [];\r\n        // let all = [];\r\n        // let superAll = [];\r\n        checkId(state.projects[projectInd].access, access, kicked);\r\n        checkId(state.projects[projectInd].superAccess, superAccess, superKicked);\r\n        checkId(access, state.projects[projectInd].access, newObservers);\r\n        checkId(superAccess, state.projects[projectInd].superAccess, newEditord);\r\n       \r\n        state.projects[projectInd] = {...state.projects[projectInd], name, description, access, superAccess};\r\n        state.workBranch.v = 's'+random;\r\n        state.mainPlace = 'editor';\r\n\r\n        return {\r\n          ...state,\r\n          kicked,\r\n          superKicked,\r\n          newObservers,\r\n          newEditord\r\n        }\r\n      })()\r\n\r\n    case 'LOGOUT': \r\n      return (() => {\r\n        delete localStorage.token;\r\n        return {\r\n          projectsCoordsData: [],\r\n          projects: false,\r\n          workPerson: null,\r\n          workPCD: null,\r\n          workBranch: null,\r\n          mapStore: [],\r\n          mapGrid: [],  //Мап ресы\r\n          mapCurrent: '',\r\n          availablePayload: null,\r\n          users: [], // all exist users\r\n          personObj: null, // Всегда можно найти себя по этому адресу..\r\n          friends: [],\r\n          mainPlace: 'editor', // project save\r\n        }\r\n      })()\r\n    case 'OPEN_PLACE': \r\n      return {\r\n        ...state,\r\n        mainPlace: payload\r\n      }\r\n    case 'CLEAN_APPLICANT_LIST':\r\n      return (() => {\r\n      \r\n        //payload = superId;\r\n        state.personObj.userData.applicantList = state.personObj.userData.applicantList.filter(({superId}) => superId !== payload)\r\n        console.log(state.personObj.userData.applicantList);\r\n        return state\r\n      })()\r\n    case 'UPDATE_APPLICANT_LIST': // updateApplicantList\r\n      return (() => {\r\n        //payload = user || obj.userData\r\n        state.personObj.userData.applicantList.push(payload);\r\n        return {\r\n          ...state\r\n        }\r\n      })()\r\n    case 'UPDATE_DATA': \r\n      // {payload, address, dlsInfo} = payload\r\n \r\n      // ВСЕ ЭТИ ВЕЩИ МОГУТ ОТРАБОТАТЬ ПРИ КОМНАТЕ ВЫБОРА... \r\n      // Я НЕ ОБНОВЛЯЮ этот стафф. просто произвожу повторный запрос, если есть Подтверждающий клик.    \r\n      // прослушка своего объекта не прекращается!!! --> проводишь обновления\r\n\r\n      // А что будет, если ты отключишься \r\n      // Вся логика UPDATE даты построена вокруг того, что ТЫ сейчас работаешь над ним, и\r\n      // и что сейчас ты находишься в рабочем юзере.. ----> При переключении проекты меняются и куда \r\n      // улетят эти данные (никуда, индекс не найдется) не известно... Поэтому обновление данные происходит только в лайв\r\n      // режиме. А переключение на себя будет происходить только после гетта полного стека свежих данных.\r\n      \r\n      // больше не делай таких вредных обработчиков\r\n      return (() => { \r\n        let {data, address, dls} = payload;\r\n        let connected = state.workPerson === data.person \r\n        // рефакторни это место. поиски можно вынести наверх\r\n        switch(address) {\r\n          case 'friend': //  отрабатывает при пике юзера в социальном компоненте \r\n            (() => {\r\n              let {userData, projects} = data;\r\n              let friendInd = [];\r\n              mineInd(state.friends, userData.superId, ['userData','superId'], friendInd);\r\n              state.friends[friendInd[0]].projects = projects;\r\n              state.friendV = random;\r\n            })()\r\n          break;\r\n          case 'projects':\r\n            (() => {\r\n            })()\r\n          break;\r\n          case 'new_version': \r\n            connected && (() => {\r\n              const {projectId, workVersion} = data;\r\n\r\n              let projectInd = [];\r\n              mineInd(state.projects, projectId, 'superId', projectInd);\r\n              state.projects[projectInd[0]].versions.push(workVersion);\r\n              state.workBranch.v = random;\r\n            })()\r\n          break\r\n          case 'versions':\r\n            connected && (() => {\r\n\r\n              // нужно чекать есть что рендерить, или нужно дропать ошибку тут.\r\n\r\n              let {person, projectId, versionId, workVersion} = data;\r\n              // Если ты находишь в другом проекте или версии...\r\n              // update version;\r\n              let projectInd = [];\r\n              mineInd(state.projects, projectId, 'superId', projectInd);\r\n\r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, versionId, 'superId', versionInd);\r\n\r\n              state.projects[projectInd[0]].versions[versionInd[0]].data = workVersion; \r\n              // нужно ли обновлять workBranch? Da\r\n              let realProjectInd = [];\r\n              mineInd(state.projects, state.workPCD.projectId, 'superId', realProjectInd);\r\n              let realVersionInd = [];\r\n              mineInd(state.projects[realProjectInd[0]].versions, state.workPCD.workVersion, 'superId', realVersionInd);\r\n              state.workBranch = state.projects[realProjectInd[0]].versions[realVersionInd[0]].data;\r\n\r\n              let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n              state.workBranch.v = random;\r\n              pathReducer(path, state);\r\n\r\n              // Проверка на то, что в новой дате, есть данные, с координатами, работающего PCD \r\n              // Если нет, то выбрасывается ошибка, хотя можно сделать куда мягче, но это уже на rebuild \r\n              \r\n\r\n              let pcdInd = [];\r\n              mineInd(state.projectsCoordsData, state.workPCD.projectId, 'proojectId', pcdInd);\r\n              \r\n              if(state.workBranch !== 'None') {\r\n           \r\n                localStorage.updateWithDeleteWorkDirFlag = 'false'\r\n                checkBottomData(() => {localStorage.updateWithDeleteWorkDirFlag = 'true'}); //SUCCESS MOVE not fail\r\n\r\n                // с такой явной анигирующей логикой нужно слушать проекты, а не юзера\r\n                // а еще нужно разделить обязанности рабочих групп. из за этого система не гибкая\r\n\r\n                if(localStorage.updateWithDeleteWorkDirFlag !== 'true') {\r\n                  state.projectsCoordsData.splice(pcdInd[0], 1);\r\n                  state.lastProject = null;\r\n                  state.workBranch.v = 'c'+random;\r\n                }\r\n              } else {\r\n                returnError()\r\n                state.projectsCoordsData.splice(pcdInd[0], 1);\r\n                state.lastProject = null;\r\n                state.workBranch.v = 'c'+random;\r\n              } \r\n\r\n              \r\n            })()\r\n          break;\r\n          case 'available': \r\n          connected && (() => {\r\n            // ПРодумай как фильтрить это..\r\n            let {workPCD, pass} = data; // Хаю хай тут баг, кста, когда чел будет в комнате выбора, \r\n            // он может получить этот вызов и ничего не обновить... Безотказная система падет.\r\n            // можно обходить это простой проверкой на рабочего чела, который добывается в персоне сверху\r\n            let projectInd = [];\r\n            mineInd(state.projects, workPCD.projectId, 'superId', projectInd);\r\n    \r\n            let versionInd = [];\r\n            mineInd(state.projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n            if(state.projects[projectInd[0]].versions[versionInd[0]].master !== state.personObj.userData.nickName) {\r\n              state.projects[projectInd[0]].versions[versionInd[0]].master = pass;\r\n            }\r\n           \r\n            \r\n            \r\n          })()\r\n          break;\r\n          // картинки должны находится в версии а не в проекте.. \r\n          case 'illustrations':\r\n          connected && (() => {\r\n            let {newIllust, action, workPCD} = data\r\n            let projectInd = [];\r\n            mineInd(state.projects, workPCD.projectId, 'superId', projectInd);\r\n\r\n            let versionInd = [];\r\n            mineInd(state.projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n\r\n            switch(action) {\r\n              case 'ADD':\r\n              state.projects[projectInd[0]].versions[versionInd[0]].illustrations.push(newIllust);\r\n              break\r\n              case 'REMOVE': \r\n              state.projects[projectInd[0]].versions[versionInd[0]].illustrations = state.projects[projectInd[0]].versions[versionInd[0]].illustrations.filter(({src}) => src !== newIllust.src);\r\n              break\r\n            }\r\n            console.log('%c%s', 'color: pink; font-size: 24px;', 'UPDATED_ILLUS:', state.projects[projectInd[0]].versions[versionInd[0]].illustrations)\r\n          })()\r\n          break;\r\n          case 'delete': \r\n          connected && (() => {\r\n            \r\n            const {workPCD, target} = data;\r\n            let projectInd = [];\r\n            mineInd(state.projects, workPCD.projectId, 'superId', projectInd);\r\n\r\n            let PCDInd = [];\r\n            mineInd(state.projectsCoordsData, workPCD.projectId, 'projectId', PCDInd);\r\n            if(target === 'project') {\r\n              state.projects.splice(projectInd[0], 1);\r\n              state.projectsCoordsData.splice(PCDInd[0], 1);\r\n\r\n            } else {\r\n              // в будущем отловить исключение и сделать подхват существующих версий. \r\n              // А если удаляется последняяя версия, то удаляется проект. Это чекается в рекдакторе версии\r\n              // проще всего полностью снести PCD. потом просто репикнуть. С мапой это на изи делается.\r\n              \r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n              state.projects[projectInd[0]].versions.splice(versionInd[0], 1);\r\n              state.projectsCoordsData.splice(PCDInd[0], 1);\r\n              // прочекать подъем проекта и версий в PCD.\r\n            }\r\n\r\n            // перебрасывать и удаялять PCD если рабочий проект тот же\r\n            // иначе все остается на месте, просто появится пушка об удалении\r\n\r\n            if(state.workPCD.projectId === workPCD.projectId) {\r\n              state.workBranch = {}; // модификафии адресованы к .branch. хотя, что?\r\n              state.workBranch.branch = {};\r\n              state.workPCD = null;\r\n              state.mainPlace = 'error';\r\n            }\r\n            state.workBranch.v = random\r\n          })()\r\n          break\r\n          default:\r\n        }\r\n        return state;\r\n      })();\r\n    case 'ACCESS_CONTROL': \r\n      //{event, pass} = payload\r\n      //{projectId, superId} = pass \r\n      return (() => {\r\n        const {event, pass: {projectId, superId, all}} = payload;  // superId отправителя.\r\n        // all - false, asBase \r\n        // Если алл тру, значит сейчас коннект с другим челом, который заредачил all, и этот ивент прилетел именно на его адрес,\r\n        // и включился по этому.\r\n        if(state.personObj.userData.superId === superId) {\r\n          return state\r\n        };\r\n        let friendInd = [];\r\n        mineInd(state.friends, superId, ['userData', 'superId'], friendInd);\r\n        let projectInd = [];\r\n        mineInd(state.friends[friendInd[0]].projects, projectId, 'superId', projectInd);\r\n        const myId = state.personObj.userData.superId;\r\n        let accessCopy = state.friends[friendInd[0]].projects[projectInd[0]].access.slice();\r\n        let superAccessCopy = state.friends[friendInd[0]].projects[projectInd[0]].superAccess.slice();\r\n        switch(event) {\r\n          case 'NEW':\r\n          if(!accessCopy.includes(myId) && !accessCopy.includes('all')) {\r\n            openNotification({type: 'success', message: \"New access\", description: `From ${payload.pass.nickName}`})\r\n          }\r\n          state.friends[friendInd[0]].projects[projectInd[0]].access.push(all ? 'all' : myId);\r\n          break\r\n\r\n          case 'NEW_SUPER':\r\n          if(!superAccessCopy.includes(myId) && !superAccessCopy.includes('all')) {\r\n            openNotification({type: 'success', message: \"New super access\", description: `From ${payload.pass.nickName}`})\r\n          }\r\n          state.friends[friendInd[0]].projects[projectInd[0]].superAccess.push(all ? 'all' : myId);\r\n          break\r\n\r\n          case 'KICK':\r\n          state.friends[friendInd[0]].projects[projectInd[0]].access = all\r\n          ? accessCopy.filter(id => id !== 'all')\r\n          : accessCopy.filter(id => id !== myId);\r\n          let freshCopy = state.friends[friendInd[0]].projects[projectInd[0]].access;\r\n          if(!freshCopy.includes(myId) && !freshCopy.includes('all')) {\r\n            openNotification({type: 'warning', message: \"Lose access\", description: `From ${payload.pass.nickName}`})\r\n          }\r\n          if(state.workPerson === superId) {\r\n            // нужно убивать PCD и выдываать ошибку, если чел state.workPCD.projectId === projectId\r\n            // Все подъемы не видят access пробемы. Значит нужно расправляется с PCD здесь\r\n            if(state.workPCD.projectId === projectId) {\r\n              let pcdInd = [];\r\n              mineInd(state.projectsCoordsData, projectId, 'projectId', pcdInd);\r\n              state.projectsCoordsData.splice(pcdInd[0], 1);\r\n              returnError();\r\n              \r\n              state.workBranch.v = 'c'+random;\r\n            }\r\n            \r\n          }\r\n          break\r\n\r\n          case 'SUPER_KICK':\r\n          state.friends[friendInd[0]].projects[projectInd[0]].superAccess = all\r\n          ? superAccessCopy.filter(id => id !== 'all')\r\n          : superAccessCopy.filter(id => id !== myId);\r\n          let freshSuperCopy = state.friends[friendInd[0]].projects[projectInd[0]].access;\r\n          if(!freshSuperCopy.includes(myId) && !freshSuperCopy.includes('all')) {\r\n            openNotification({type: 'warning', message: \"Lose super access\", description: `From ${payload.pass.nickName}`})\r\n          } \r\n          if(state.workPerson === superId) {\r\n            // принять меры которые вводят ограничения на редактирование, если \r\n            // меры применяется автоматически, на основе встроенных фильтров superAccess\r\n          }\r\n          \r\n          break\r\n          default:\r\n            \r\n        }\r\n        state.accessV = random;\r\n        return state\r\n      })();\r\n    case 'NEW_FRIEND_PROJECT': // DISP LOGIN, guest side\r\n      return (() => {\r\n        const {personId, project} = payload;\r\n        let friendInd = [];\r\n        mineInd(state.friends, personId, ['userData', 'superId'], friendInd);\r\n        state.friends[friendInd[0]].projects.push(project);\r\n        state.friendV = random;\r\n        state.workBranch.v = random;\r\n        return state;\r\n      })()\r\n    case 'CHANGE_MASTER':\r\n      return state.workPCD\r\n      ? (() => {\r\n        let projectInd = [];\r\n          mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd);\r\n          let versionInd = [];\r\n          mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd);\r\n        \r\n          if(payload) { // setMe\r\n            let myNickName = state.personObj.userData.nickName\r\n            state.projects[projectInd[0]].versions[versionInd[0]].master = myNickName;\r\n            state.availablePayload = myNickName;\r\n            state.workBranch.v = 'a'+random;\r\n          } else { // unsetMe\r\n            if(state.projects[projectInd[0]].versions[versionInd[0]].master === state.personObj.userData.nickName) {\r\n              state.projects[projectInd[0]].versions[versionInd[0]].master = null;\r\n              state.availablePayload = null;\r\n              state.workBranch.v = 'a'+random;\r\n            }\r\n            \r\n            \r\n          }\r\n        \r\n        return state\r\n      })()\r\n      : state\r\n\r\n    case 'SET_ILLUSTRATIONS':  // этот элемент вызывается юзером на прямую.\r\n      return (() => {\r\n        const {newIllustration, action} = payload;\r\n        let projectInd = [];\r\n        mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd);\r\n\r\n        let versionInd = [];\r\n        mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd);\r\n\r\n          switch(action) {\r\n            case 'ADD': \r\n            state.projects[projectInd[0]].versions[versionInd[0]].illustrations.push(newIllustration);\r\n            break;\r\n            case 'REMOVE': \r\n            state.projects[projectInd[0]].versions[versionInd[0]].illustrations = state.projects[projectInd[0]].versions[versionInd[0]].illustrations.filter(({src}) => src !== newIllustration.src);\r\n            break\r\n          }\r\n          state.workBranch.v = 'i'+random;\r\n        return state\r\n      })()\r\n      case 'SET_MAP_DATA':\r\n        return (() => {\r\n          const {mapGrid, mapStore, mapCurrent} = payload;\r\n          return {\r\n            ...state, mapGrid, mapStore, mapCurrent\r\n          };\r\n        })()\r\n    // case 'OPEN_PROJECT_CREATOR': \r\n    //   return {\r\n    //     ...state,\r\n    //     mainPlace: 'project'\r\n    //   }\r\n    // case 'OPEN_VERSIONS_EDITOR':  //openVersionsEditor\r\n    //   return {\r\n    //     ...state,\r\n    //     mainPlace: 'version'\r\n    //   }\r\n    // case 'OPEN_PROJECT_SETUP': \r\n    //   return {\r\n    //     ...state, \r\n    //     mainPlace: 'setup'\r\n    //   }\r\n    case 'ADD_VERSION':\r\n    // допилить кода сюда и коммитнуть\r\n    return (() => {\r\n      // пройдись с дебагером тут\r\n      // debugger\r\n      // delete state.workBranch;\r\n\r\n      //DEBAG SPACE\r\n      // let testObj = {txt: \"yes\", obj: {insTxt: \"insTxt\"}, arr: ['super']};\r\n      // let cloneFactory = FastClone.factory(testObj);\r\n      // let testObjClone = cloneFactory(testObj)\r\n      //DEBAG SPACE\r\n\r\n      let projectInd = [];\r\n      mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n      // DATA EXAMPLE IS LAST VERSION;\r\n      let dataExample = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n\r\n      let DataFactory = FastClone.factory(dataExample);\r\n      let dataClone = new DataFactory(dataExample);\r\n      // debugger\r\n      const {illustrations} = state.projects[projectInd[0]].versions[versionInd[0]];\r\n\r\n      let newVersionInd = 'v'+v4();\r\n      state.projects[projectInd[0]].versions.push({\r\n        comment: payload.comment,\r\n        date,\r\n        superId: newVersionInd,\r\n        master: null,\r\n        //ways,\r\n        illustrations,\r\n        data: dataClone\r\n      });\r\n\r\n      let PCDInd = [];\r\n      mineInd(state.projectsCoordsData, state.workPCD.projectId, 'projectId', PCDInd);\r\n      \r\n      let PCDFactory = FastClone.factory(state.workPCD[state.workPCD.workVersion]);\r\n      \r\n      state.projectsCoordsData[PCDInd[0]][newVersionInd] = new PCDFactory(state.workPCD[state.workPCD.workVersion]); // точечное копирование???\r\n      state.projectsCoordsData[PCDInd[0]].workVersion = newVersionInd;\r\n      \r\n      //delete state.workPCD;\r\n      state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n\r\n      state.workBranch = state.projects[projectInd[0]].versions[state.projects[projectInd[0]].versions.length-1].data; \r\n      let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n      pathReducer(path, state);\r\n\r\n      state.workBranch.v = 'v'+random;\r\n      state.mainPlace = 'editor';\r\n      return state\r\n    })()\r\n    case 'NEW_FRIEND_VERSION':\r\n      return (() => {\r\n\r\n        return state\r\n      })()\r\n    case 'SAVE_POD': //wb.v\r\n\r\n    return (() => {\r\n      // Доделать этот компонент.\r\n      // Интегрировать новую дату: PathDirection на уровне версии, потом пройтись по всему и прокомментить\r\n      const {data: {label, mainPart, comment, artsDesription, branchDirection, wayDirection, answers, artSrc}, selectedType} = payload;\r\n      \r\n      let realWorkBranch = state.workBranch.branch;\r\n      let currentHeight = state.workPCD[state.workPCD.workVersion].height;\r\n\r\n      const updatePod = () => {\r\n        realWorkBranch.base[currentHeight] = {\r\n          coord: {\r\n            path: state.workBranch.pos,\r\n            height: currentHeight\r\n          },\r\n          label,\r\n          main: mainPart,\r\n          comment,\r\n          picture: {\r\n            src: artSrc,\r\n            alt: artsDesription\r\n          }\r\n        }\r\n      };\r\n\r\n      // здесь происходит модифицирование описания рабочего вея не зависимо вопрос это или под\r\n\r\n      // let etalonWay = state.workBranch.wayId;\r\n      // let projectInd = [];\r\n      // mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n      // let versionInd = [];\r\n      // mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n\r\n      // let etalonWayInd = [];\r\n      // mineInd(state.projects[projectInd[0]].versions[versionInd[0]].ways, etalonWay, 'wayId', etalonWayInd);\r\n\r\n      // state.projects[projectInd[0]].versions[versionInd[0]].ways[etalonWayInd[0]].wayDirection = wayDirection;\r\n\r\n      const updateAnswers = () => {\r\n        answers.forEach(({content, key, ref}) => { // wayColor, wayId\r\n          console.log(typeof key);\r\n\r\n          //!!! пройдись с дебаггером. Но все должно быть хорошо. Нельзя просто так переставлять элементы.\r\n          // -> последовательность сохранится\r\n\r\n          const isNewBranch = !realWorkBranch.hasOwnProperty('q'+key);\r\n          realWorkBranch['q'+key] = isNewBranch\r\n          ? {\r\n            ans: content,\r\n            pos: state.workBranch.pos+key,\r\n            //wayId,\r\n            branch: {\r\n              branchDirection: '',\r\n              base: [\r\n                {\r\n                  coord: {\r\n                    path: state.workBranch.pos+key,\r\n                    height: \"0\"\r\n                  },\r\n                  label: '',\r\n                  main: '',\r\n                  comment: '',\r\n                  picture: {\r\n                    src: null,\r\n                    alt: ''\r\n                  }\r\n                }\r\n              ], // сделать красиво\r\n              question: false,\r\n              choseCount: 0,\r\n              ref: ref.length === 0 ? false : ref,\r\n              }\r\n            }\r\n          : {...realWorkBranch['q'+key], ans: content} // wayId\r\n          // if(isNewBranch) {\r\n          //   state.projects[projectInd[0]].versions[versionInd[0]].ways.push({wayId, color: wayColor, wayDirection: ''})\r\n          // } else {   \r\n          //   // find and modif   \r\n          //   let wayInd = [];\r\n          //   mineInd(state.projects[projectInd[0]].versions[versionInd[0]].ways, wayId, 'wayId', wayInd);\r\n          //   if(etalonWay === state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]].wayId) {\r\n          //     state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]] = {wayId, color: wayColor, wayDirection}\r\n          //   } else {\r\n          //     state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]] = {\r\n          //       ...state.projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]], color: wayColor\r\n          //     }\r\n          //   }\r\n          // };\r\n        });\r\n\r\n\r\n\r\n        realWorkBranch.choseCount = answers.length;\r\n        realWorkBranch.question = {\r\n          coord: {\r\n            path: state.workBranch.pos,\r\n            height: 'question'\r\n          },\r\n          label,\r\n          main: mainPart,\r\n          comment,\r\n          picture: {\r\n            src: artSrc,\r\n            alt: artsDesription\r\n          }\r\n        };\r\n      }\r\n      \r\n      // первые 3 случая более чем реальны!\r\n      if(selectedType === \"0\" && currentHeight !== 'question') {\r\n        //обновить ПОД по рабочей высоте\r\n        updatePod()\r\n      } else if(selectedType === \"1\" && currentHeight === 'question') {\r\n        // обновить вопрос и ответы \r\n        updateAnswers()\r\n      } else if(selectedType === \"1\" && currentHeight !== 'question') {\r\n        updateAnswers()\r\n        if(currentHeight < (realWorkBranch.base.length-1)) {\r\n          // Добавить уведомления о том, что поды были перемещены по нулевому ответу\r\n          let zeroBase = realWorkBranch.base.splice(currentHeight+1);\r\n          // переписать адресы подов в соответсвтующие\r\n          realWorkBranch['q0'].branch.base = zeroBase.map((el, i) => {\r\n            return {\r\n              ...el,\r\n              coord: {path: el.coord.path+\"0\", height: i}\r\n            }\r\n          });\r\n        }\r\n        realWorkBranch.base.splice(currentHeight, 1);\r\n        state.workPCD[state.workPCD.workVersion].height = 'question';\r\n        \r\n        //обновить вопрос и ответы, а так же ликвидировать ПОД по высоте\r\n      } else if(selectedType === \"0\" && currentHeight === 'question') {\r\n        let realWorkBranch = state.workBranch.branch;\r\n        realWorkBranch.base = [...realWorkBranch.base, {\r\n          coord: {\r\n            path: state.workBranch.pos,\r\n            height: realWorkBranch.base.length\r\n          },\r\n          label,\r\n          main: mainPart,\r\n          comment,\r\n          picture: {\r\n            src: artSrc,\r\n            alt: artsDesription,\r\n          }\r\n        }]\r\n        state.workPCD[state.workPCD.workVersion].height = realWorkBranch.base.length-1;\r\n        \r\n        for(let i = 0; i < realWorkBranch.choseCount; i++) {\r\n          delete realWorkBranch['q'+i+''];\r\n        }\r\n        realWorkBranch.choseCount = 0;\r\n        realWorkBranch.question = false;\r\n        //опасный момент. Оставлю на последок.\r\n        //создать ПОД по максимальной высоте и ликвидировать вопрос с ответами.\r\n      }\r\n      state.workBranch.branch.branchDirection = branchDirection;\r\n      \r\n      // где то здесь получается...\r\n      state.workBranch.v = 'p'+random; // события по обработчику\r\n      return {\r\n        ...state\r\n      }\r\n    })();\r\n\r\n    case 'CHANGE_BRANCH': //wb.v--\r\n    // перемещения при выборе ответа на вопрос и отлетании на предыдущий вопрос\r\n    // payload = 0\r\n    \r\n    return (() => {\r\n      let projectInd = [];\r\n      mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n      \r\n      if(payload === 'back') { // возвращение на ласт вопрос\r\n        let path = state.workPCD[state.workPCD.workVersion].path;\r\n        state.workPCD[state.workPCD.workVersion].path = path.substring(0, path.length-1);\r\n        state.workPCD[state.workPCD.workVersion].height = \"question\";\r\n        \r\n        \r\n        state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n        let workPath = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n        pathReducer(workPath, state);\r\n        // while(workPath) {\r\n        //   state.workBranch = state.workBranch.branch['q'+workPath[0]];\r\n        //   workPath = workPath.substring(1);\r\n        // };\r\n        if(state.workBranch.branch.base.length) {\r\n          state.workPCD[state.workPCD.workVersion].height = '0'\r\n        }\r\n\r\n      } else if(typeof payload === 'string') { // Event from map\r\n\r\n        state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n        state.workPCD[state.workPCD.workVersion].path = payload;\r\n        state.workPCD[state.workPCD.workVersion].height = \"question\";\r\n        let path = payload.substring(1);\r\n        pathReducer(path, state);\r\n\r\n        if(state.workBranch.branch.base.length) {\r\n          state.workPCD[state.workPCD.workVersion].height = '0'\r\n        }\r\n      } else {\r\n\r\n        state.workBranch = state.workBranch.branch['q'+payload];\r\n        state.workPCD[state.workPCD.workVersion].path = state.workPCD[state.workPCD.workVersion].path+payload;\r\n        state.workPCD[state.workPCD.workVersion].height = \"question\";\r\n        if(state.workBranch.branch.base.length) {\r\n          state.workPCD[state.workPCD.workVersion].height = \"0\";\r\n        }\r\n        \r\n      }\r\n      \r\n      state.workBranch.v = 'c'+random;\r\n      return {\r\n        ...state\r\n      }\r\n    })();\r\n    case 'ADD_POD': //wb.v\r\n    return (() => {\r\n      \r\n      console.log(payload)\r\n        // создание нового элемента и переадресация процесса на него\r\n        let realWorkBranch = state.workBranch.branch;\r\n        if(payload !== 'question') {\r\n          let firstPart = realWorkBranch.base.slice(0, +payload+1);\r\n          let secondPart = realWorkBranch.base.slice(+payload+1);\r\n          realWorkBranch.base = [...firstPart, {\r\n            coord: {\r\n              path: state.workBranch.pos,\r\n              height: +payload+1\r\n            },\r\n            label: '',\r\n            main: '',\r\n            comment: '',\r\n            picture: {\r\n              src: null,\r\n              alt: ''\r\n            }\r\n          }].concat(secondPart.map((data) => {\r\n            const {path, height} = data.coord\r\n            return {...data, coord: {path, height: +height+1}}\r\n          }));\r\n          state.workPCD[state.workPCD.workVersion].height = +payload+1;\r\n      } else {\r\n          realWorkBranch.base = [...realWorkBranch.base, {\r\n            coord: {\r\n              path: state.workBranch.pos,\r\n              height: realWorkBranch.base.length\r\n            },\r\n            label: '',\r\n            main: '',\r\n            comment: '',\r\n            picture: {\r\n              src: null,\r\n              alt: ''\r\n            }\r\n          }];\r\n          state.workPCD[state.workPCD.workVersion].height = realWorkBranch.base.length-1;\r\n        }\r\n        \r\n        state.workBranch.v = 'p'+random;\r\n      return {\r\n        ...state\r\n      }\r\n    })()\r\n    case 'CHOOSE_POD': \r\n    return (() => {\r\n      state.workPCD[state.workPCD.workVersion].height = payload;\r\n      state.mainPlace = 'editor';\r\n      state.workBranch.v = 'c'+random\r\n      return {\r\n        ...state\r\n      }\r\n    })()\r\n    case \"DELETE_POD\": //wb.v\r\n    return (() => {\r\n      \r\n      console.log(payload)\r\n      let realWorkBranch = state.workBranch.branch;\r\n      let newCurrentHeight;\r\n      if(payload === 'question') {\r\n        for(let i = 0; i < realWorkBranch.choseCount; i++) {\r\n          delete realWorkBranch['q'+i]\r\n        }\r\n        realWorkBranch.choseCount = 0;\r\n        realWorkBranch.question = false;\r\n        newCurrentHeight = realWorkBranch.base.length-1;\r\n      } else {\r\n        realWorkBranch.base.splice(payload, 1);\r\n        realWorkBranch.base = realWorkBranch.base.map((el, i) => ({...el, coord: {...el.coord, height: i}}))\r\n        \r\n        if((realWorkBranch.base.length-1) >= payload) {\r\n          newCurrentHeight = payload;\r\n        } else {\r\n          newCurrentHeight = payload-1;\r\n        }\r\n      }\r\n      state.workPCD[state.workPCD.workVersion].height = newCurrentHeight;\r\n      state.workBranch.v = 'p'+random;\r\n      return {\r\n        ...state\r\n      }\r\n    })()\r\n    case 'SELECT_PROJECT': \r\n    return (() => {\r\n\r\n      // Это не просто точка входа в проект, это МЕД БРИГАДА, которая уничтожает вредоносный PCD и делает новый, причем \r\n      // Отлавливаются проблемы на всех уровнях.. с последующей перезаписью через приставку.\r\n\r\n      // этот блок отвечает за то, что бы сейвить myLastProject, которые используется для возвращения домой\r\n      // и как альтернатива работе дом, так же сейвиться последний проект у друга... для восстановления \r\n      // ласт состояния у друга, после всех проверок..\r\n\r\n      let isFriend = state.personObj.userData.friends.some(({superId}) => superId === state.workPerson);\r\n      if(state.personObj.userData.superId !== state.workPerson) { \r\n\r\n        //обновление координат данных о последних проектах\r\n        // компонент сделан так убого, потому что я пытался добывать данные у случайных челов,\r\n        // что привело бы к бессконечноному нарастанию исключений, вокруг того пика.\r\n\r\n        if(isFriend) { \r\n          let workFriendInd;\r\n          for(let i in state.personObj.userData.friends) {\r\n            if(state.personObj.userData.friends[i].superId === state.workPerson) {\r\n              workFriendInd = i;\r\n            }\r\n          };\r\n          state.personObj.userData.friends[workFriendInd].lastProject = payload;\r\n        }\r\n      } else {\r\n        state.personObj.userData.myLastProject = payload;\r\n      };\r\n\r\n      // Ошибка не добитого PCD это норма, искать его на сервере можно, но лучше здесь\r\n      // Это и защита от других возможно еще не известных ошибок.\r\n\r\n      let PCDInd = [];\r\n      mineInd(state.projectsCoordsData, payload, 'projectId', PCDInd);\r\n\r\n      let projectInd = [];  // двухсторонная связь, данные 100% существуют.\r\n      mineInd(state.projects, payload, 'superId', projectInd)\r\n      \r\n      // Хендлинг остутсвия проекта в PCD юзера и компенсация пропуска.\r\n      // Работает как у гостя, так и у юзера.\r\n\r\n      function restartData() {\r\n        let firstVersionId = state.projects[projectInd[0]].versions[0].superId;\r\n        let workHeight = state.projects[projectInd[0]].versions[0].data.branch.base.length ? \"0\" : \"question\";\r\n        state.projectsCoordsData.push({projectId: payload, workVersion: firstVersionId, [firstVersionId]: {path: \"0\", height: workHeight}})\r\n        PCDInd = [state.projectsCoordsData.length-1];\r\n      }\r\n\r\n      if(!PCDInd.length) { // работает при пике проекта у друга и себя, если был делет\r\n        // add new project in PCD;\r\n        restartData()\r\n      }\r\n\r\n      state.workPCD = state.projectsCoordsData[PCDInd[0]]; \r\n\r\n      /// нужно отловить ошибку и выдать первичную дату ---> вынести в функцию обработчик исключений\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd);\r\n      \r\n      if(!versionInd.length) {\r\n        // найти wrong pcd и уничтожить\r\n        let wPCDInd = [];\r\n        mineInd(state.projectsCoordsData, payload, 'projectId', wPCDInd);\r\n        state.projectsCoordsData.splice(wPCDInd[0], 1);\r\n        restartData()\r\n        versionInd = ['0'];\r\n        state.workPCD = state.projectsCoordsData[PCDInd[0]]; \r\n      } \r\n      state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n      \r\n      // нужно добавить проверку на существование рабочей высоты и пода.. ибо данные в PCD могли устареть\r\n      // в том смысле, что этих высот и путей уже нет.\r\n\r\n      let path = state.workPCD[state.workPCD.workVersion].path.substring(1)\r\n      pathReducer(path, state);\r\n\r\n      if(state.workBranch !== 'None') {\r\n\r\n        localStorage.chooseProjectFlag = 'false'\r\n        checkBottomData(() => {localStorage.chooseProjectFlag = 'true'});\r\n\r\n        if(localStorage.chooseProjectFlag !== 'true') {\r\n          state.projectsCoordsData.splice(PCDInd[0], 1);\r\n          restartData();\r\n          state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n            // чекнуть последствия таких включений \r\n          //state.workBranch.branch = state.projects[projectInd[0]].versions[versionInd[0]].data.branch;\r\n        }\r\n      } else {\r\n        state.projectsCoordsData.splice(PCDInd[0], 1);\r\n        restartData();\r\n        state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n         // чекнуть последствия таких включений \r\n        //state.workBranch.branch = state.projects[projectInd[0]].versions[versionInd[0]].data.branch;\r\n      } \r\n      state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n      state.workBranch.v = 'c'+random;\r\n      state.mainPlace = 'editor';\r\n      return {\r\n        ...state,\r\n      }\r\n    })()\r\n    case 'SELECT_VERSION': \r\n\r\n    return (() => {\r\n      //payload  -> pcd.workVersion\r\n      let projectInd = [];\r\n      mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd);\r\n\r\n      let versionInd = [];\r\n      mineInd(state.projects[projectInd[0]].versions, payload, 'superId', versionInd);\r\n\r\n      if(!state.workPCD.hasOwnProperty(payload)) { \r\n        // пришел чел с другого акка, он не был при создании версии.. или user после delete\r\n        const height = state.projects[projectInd[0]].versions[versionInd[0]].data.branch.base.length ? '0' : 'question';\r\n        state.workPCD[payload] = {path: '0', height}\r\n      } \r\n\r\n      // check wron\r\n\r\n      state.workPCD.workVersion = payload;\r\n      \r\n      state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n\r\n      state.workBranch.v = 'c'+random\r\n      return state;\r\n    })();\r\n    // case 'PREVIEW_PERSON': \r\n    // return (() => {\r\n    //   // ОЧЕНЬ ПЛОХАЯ ИДЕЯ... ОЧЕНЬ.. без... И все таки это улетает на ребилд после альфы.\r\n\r\n    //   console.log(\"PREVIEW_PERSON: \", payload) \r\n    //      // payload = {userData, projects, }\r\n    //   const {projects, userData} = payload;\r\n    //   state.projects = projects;\r\n    //   state.workPerson = userData.superId;\r\n    //   state.workBranch = projects[0].versions[0].data;\r\n\r\n    //   //let versionId = projects[0].versions[0].superId;\r\n    //   // projects.reverse().forEach(({superId, versions: {superId: versionId}}) => {\r\n    //   //   state.projectsCoordsData.push({projectId: superId, workVersion, }) // это должно быть частью SELECT PROJECT\r\n    //   // }) // дополнение PCD при отсутстивии пакета с Id выбранного проекта\r\n    //   // state.workPCD = {\r\n    //   //   projectId: projects[0].superId, \r\n    //   //   workVersion: versionId,\r\n    //   //   [versionId]: {path: \"0\", height: \"0\"}\r\n    //   // };\r\n    //   //state.projectsCoordsData.push(state.workPCD);\r\n   \r\n    //   return state\r\n    // })()\r\n    case 'ADD_FRIEND': \r\n      //payload === user \r\n      return (() => {\r\n        const {userData} = payload\r\n        state.personObj.userData.friends.push({superId: userData.superId, lastProject: null});\r\n        state.friends.push(payload);\r\n        return state\r\n      })()\r\n    case 'CHOOSE_ME': \r\n      return (() => {\r\n        // вызов с вынужденной датой через перепресваивание рабочего проекта\r\n        // грядет эпоха геттеров \r\n\r\n        // ф находит последнюй проект, который хранится в state.personObj.userData.myLastProject\r\n        // и если он существует, пытается найти его PCD и его самого. В случае, если все данные на месте\r\n        // создает workBranch и перебрасывает на editor \r\n        // Если же он не может найти что то по координатным данным, или если этих самых PCD нет\r\n        // То он зануляет все важны рычаги (workPCD и workBranch) и выбрасывает на нейтрольное месте.\r\n        // Откуда можно выбрать другой проект или создать новый.\r\n        // Алгорит описана в INIT\r\n\r\n        state.workBranch = {};\r\n        state.projects = payload;\r\n        state.workPerson = state.personObj.userData.superId;\r\n\r\n        if(state.personObj.userData.myLastProject !== null) {\r\n          const lastProject = state.personObj.userData.myLastProject;\r\n\r\n          let projectsCoordInd = [];\r\n          mineInd(state.projectsCoordsData, lastProject, 'projectId', projectsCoordInd)\r\n\r\n          if(projectsCoordInd.length) { \r\n            // PCD существует, значит проверка. ПРОСТО 2 ПРОВЕРКИ потом сделаю исключения более лаконичными.\r\n\r\n            state.workPCD = state.projectsCoordsData[projectsCoordInd[0]];\r\n            let projectInd = []\r\n            mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n\r\n            if(projectInd.length) {\r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n        \r\n              if(versionInd.length) {\r\n                state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n                let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                pathReducer(path, state);\r\n\r\n                if(state.workBranch !== 'None') {\r\n\r\n                  // CHECK POD || QUERY проверка комплексная.. \r\n                  ///// надо вынести это в отдельную функцию....\r\n                  checkBottomData(() => state.mainPlace = 'editor');\r\n                  /////\r\n                  \r\n                } else {\r\n                  returnError()\r\n                }\r\n\r\n              } else { \r\n                returnError()\r\n              }\r\n\r\n            } else {\r\n              returnError()\r\n            }\r\n\r\n          } else {\r\n            returnError()\r\n          }\r\n          \r\n        } else {\r\n          state.workPCD = null\r\n          state.workBranch.branch = {};\r\n          state.mainPlace = 'beginner'\r\n        }\r\n      state.workBranch.v = 'c'+random\r\n        return state;\r\n      })()\r\n    case 'CHOOSE_PERSON':\r\n  \r\n      // будут ли происходить изменения в друзьях при модифировании \r\n      return (() => {\r\n        //payload === superId [friend]\r\n        \r\n        // по сути работы ф похожа на chooseMe, так что все подробное объяснение там.\r\n        // Возможно функции будут слиты в одну.\r\n        // Алгорит описана в INIT\r\n        let friendInd = [];\r\n        mineInd(state.friends, payload, ['userData', 'superId'], friendInd);\r\n\r\n        state.projects = state.friends[friendInd[0]].projects;\r\n\r\n        let deepFriendInd = [];\r\n        mineInd(state.personObj.userData.friends, payload, 'superId', deepFriendInd);\r\n        // friends last project....\r\n        let lastMyProjectInFriend = state.personObj.userData.friends[deepFriendInd[0]].lastProject;\r\n\r\n        if(lastMyProjectInFriend !== null) {\r\n          // поиск рабочего PCD, который отвечает за последний последний проект, версию, высотку пода.\r\n          let PCDInd = [];\r\n          mineInd(state.projectsCoordsData, lastMyProjectInFriend, 'projectId', PCDInd);\r\n          \r\n          if(PCDInd.length) {\r\n\r\n            state.workPCD = state.projectsCoordsData[PCDInd[0]];\r\n            let projectInd = [];\r\n            mineInd(state.projects, state.workPCD.projectId, 'superId', projectInd)\r\n            \r\n            if(projectInd.length) {\r\n\r\n              console.time()\r\n              let versionInd = [];\r\n              mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n              \r\n              if(versionInd.length) {\r\n\r\n                console.timeEnd()\r\n                state.workBranch = state.projects[projectInd[0]].versions[versionInd[0]].data;\r\n                let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                pathReducer(path, state)\r\n\r\n                if(state.workBranch !== 'None') {\r\n\r\n                  // CHECK POD || QUERY проверка комплексная.. \r\n                  checkBottomData(() => state.mainPlace = 'editor');\r\n                } else {\r\n                  returnError()\r\n                }\r\n\r\n              } else {\r\n                returnError()\r\n              }\r\n              \r\n            } else {\r\n              returnError()\r\n            }\r\n            \r\n          } else {\r\n            returnError()\r\n          }\r\n          \r\n        } else {\r\n          state.workPCD = null;\r\n          state.workBranch.branch = {};\r\n          state.mainPlace = 'choose'\r\n        }\r\n        state.workPerson = payload;\r\n        state.workBranch.v = 'c'+random;\r\n        return {\r\n          ...state\r\n        }\r\n      })()\r\n    case 'INIT':\r\n      return (() => {\r\n        // Прокоментить каждое действие и интегрировать mineInd\r\n\r\n        // Важнейший элемент в работе приложения. \r\n        // Отвечает за формирование нормального рабочего состояния, на основе данных в payload\r\n        // Алгоритм: 1. Прокидывает основные данные (даже если они пустые)\r\n        // 2. Определяет рабочий PCD на основе последнего проекта. -> Если нет проекта, вернет [],\r\n        // Который отловится дальше и выбросит исключение.\r\n        // 3. Определяет был ли юзер в другом профиле или у себя на момент последнего экшна. \r\n        // На основе этой инфы выбирается источник проектов, от которого зависит workBranch.\r\n        // 4. Утверждается рабочая персона, от которой зависит работа updateDate и обновление myLastProject, \r\n        // а так же superId в friends проектах.\r\n        // 5. Находится рабочий проект, или нет.\r\n        // 6. Находится рабочая версия или нет.\r\n        // 7. И ластовые проверки на существование рабочей высоты, Если хоть чего то нет, то редирект на error.\r\n\r\n        const {friends, personObj: {projects, projectsCoordsData, lastProject, lastPerson, userData: {superId}}} = payload;\r\n        state.personObj = payload.personObj // 1\r\n\r\n        state.projectsCoordsData = state.personObj.projectsCoordsData; // 1\r\n        state.friends = friends // 1\r\n        // Всегда можно найти себя по этому адресу..\r\n      \r\n        state.workBranch = {};\r\n        \r\n        let projectsCoordInd = [];\r\n        mineInd(projectsCoordsData, lastProject, 'projectId', projectsCoordInd) \r\n        // по налу он не найдет ничего))\r\n\r\n        if(lastPerson === superId) { // спавнимся дома\r\n          /// \r\n          state.workPerson = superId;\r\n          state.projects = state.personObj.projects;\r\n          ///\r\n          if(projectsCoordInd.length) { \r\n            state.workPCD = state.projectsCoordsData[projectsCoordInd[0]];\r\n            let lockInd = [];\r\n            mineInd(projects, lastProject, 'superId', lockInd);\r\n\r\n            if(lockInd.length) {\r\n\r\n              \r\n              let versionInd = [];\r\n              mineInd(state.projects[lockInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n\r\n              if(versionInd.length) {\r\n\r\n                state.workBranch = state.projects[lockInd[0]].versions[versionInd[0]].data;\r\n                let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                pathReducer(path, state)\r\n              \r\n                if(state.workBranch !== 'None') { \r\n                  checkBottomData(() => state.mainPlace = 'editor')\r\n                } else {\r\n                  returnError()\r\n                }\r\n\r\n              } else {\r\n                returnError()\r\n              }\r\n\r\n              // if(projectsCoordInd[0] !== null) { /// Нужно еще branch и path чекать.... Ебаа\r\n              //   // Уже есть проект \r\n                \r\n      \r\n              // } else { /// PCD CHECK NAT\r\n              //   // еще нет проектов \r\n              //   state.workPCD = null\r\n              //   state.workBranch.branch = {};\r\n              //   state.mainPlace = 'beginner'\r\n              // }\r\n              \r\n            } else {\r\n              returnError(); \r\n            }\r\n\r\n          } else {\r\n            returnError() // PROJECT CHECK\r\n          }\r\n          \r\n        } else { // спавнимся в гостях\r\n          // обработать ошибку с отключенным аксессом и в следствии этого упавшим проектом\r\n\r\n          // поиск проекта и метаданных у другого персонажа\r\n          // можно добавлять в друзья, если есть хотя бы один проект\r\n          // ДОДЕЛАТЬ С ДЕБАГЕРОМ...\r\n\r\n          // ЧТО ЕСЛИ У ЧЕЛА НЕТ ПРОЕКТОВ????\r\n          // ЗАСЕЙВИТЬ ГДЕ ТО данные персон обjecta;;\r\n          // все норм, только нужно хендлить пустые проекты \r\n          state.workPerson = lastPerson; // прокинут ийди человечка\r\n\r\n          let friendInd = [];\r\n          mineInd(friends, lastPerson, ['userData', 'superId'], friendInd)\r\n\r\n          // профиля пока что не удаляются поэтому сейв не нужен\r\n\r\n          // friends.forEach(({userData: {superId}}, i) => {\r\n          //   if(lastPerson === superId) {\r\n          //     friendInd = i;\r\n          //   }\r\n          // })\r\n          state.projects = state.friends[friendInd[0]].projects; /// прокинуты проекты\r\n\r\n\r\n\r\n          if(projectsCoordInd.length) {\r\n            state.workPCD = state.projectsCoordsData[projectsCoordInd[0]]; \r\n\r\n            if(lastProject !== null) { // ЕСть с чем работать. юзлесный чек, но историчный, так что сейвлю\r\n              let projectInd = [];\r\n              mineInd(state.projects, lastProject, 'superId', projectInd);\r\n\r\n              if(projectInd.length) {\r\n                \r\n                let versionInd = [];\r\n                mineInd(state.projects[projectInd[0]].versions, state.workPCD.workVersion, 'superId', versionInd)\r\n                \r\n                if(versionInd.length) {\r\n                  state.workBranch = state.projects[projectInd[0]].versions[versionInd].data  // прокинут ворк бренч.\r\n                  let path = state.workPCD[state.workPCD.workVersion].path.substring(1);\r\n                  pathReducer(path, state)\r\n                  if(state.workBranch !== 'None') {\r\n                    checkBottomData(() => state.mainPlace = 'editor')\r\n                  } else {\r\n                    returnError()\r\n                  }\r\n                } else {\r\n                  returnError()\r\n                }\r\n              \r\n              } else {\r\n                returnError()\r\n              }\r\n  \r\n            } else { // юзлес вроде. УДали.\r\n              state.workPCD = null;\r\n              state.workBranch.branch = {};\r\n              state.mainPlace = 'choose'\r\n            }\r\n\r\n          } else {\r\n            returnError()\r\n          }\r\n\r\n        }\r\n        state.workBranch.v = Math.random();\r\n        return {\r\n          ...state\r\n        }\r\n      })()\r\n    default:\r\n      return state;\r\n  }\r\n  \r\n  // function mineInd(source, etalon, key, mod) {\r\n  //   for(let i in source) {\r\n  //     const natSource = i => {\r\n  //         key = Array.isArray(key) ? key : [key]\r\n  //         let base = source[i];\r\n  //         let keyPath = key.slice();\r\n  //         while(keyPath.length) {\r\n  //           base = base[keyPath.shift()];\r\n  //         }\r\n  //         return base;\r\n  //     }\r\n  //     if(natSource(i) === etalon) {\r\n  //       mod[0] = i\r\n  //     }\r\n  //   }\r\n  // };\r\n  function pathReducer(path, state) { /// переместить это чудо функцию наверх\r\n    while(path.length) {\r\n      state.workBranch = state.workBranch?.branch?.['q'+(path?.[0] ?? 'none')] ?? \"None\";\r\n      path = path.substring(1);\r\n    };\r\n  };\r\n}\r\n\r\n","const defState = {\r\n  nickname: \"Es_ILias\",\r\n  avatar: \"\",\r\n  lastProject: 'none'\r\n}\r\n\r\nexport default (state = defState, {type, payload}) => {\r\n  switch(type) {\r\n    case \"SET_USER\": \r\n    return (() => {\r\n      return {\r\n        ...state\r\n      }\r\n    })();\r\n    default:\r\n    return {\r\n      ...state\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport main from './main';\r\nimport user from './user'\r\n\r\nexport default combineReducers({\r\n  main,\r\n  user\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n//makeMiddleware, that catch game actions and make req to server;\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst randomMiddleware = store => next => action => {\r\n  console.log(\"STORE:\", store);\r\n  console.log(\"ACTION:\", action);\r\n  console.log(\"NEXT:\",next);\r\n  action.random = Math.random();\r\n  next(action)\r\n}\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, randomMiddleware)))\r\n\r\nexport default store","import React from 'react'\r\n\r\nimport './Notes.scss'\r\n\r\nconst Notes = () => {\r\n  return(\r\n    <div className='notes'>\r\n      <div className='notes__plug'>{\"Plan & Scenario (SOON)\"}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport {Input} from 'antd';\r\nimport {SearchOutlined} from '@ant-design/icons' //< />\r\n\r\nimport './Input.scss'\r\n\r\nconst InputBase = (\r\n  {\r\n    width=100, \r\n    place='main', \r\n    placeholder, \r\n    changeHandler=()=>{}, \r\n    value, \r\n    readOnly, \r\n    isPassword=false\r\n  }) => {\r\n  \r\n  const props = {\r\n    value,\r\n    readOnly,\r\n    style: {width: width+'%'},\r\n    onChange: (ev) => changeHandler(ev),\r\n    placeholder,\r\n    className: classNames('input', 'input__'+place)\r\n  }\r\n  return isPassword ? <Input.Password {...props} /> : <Input {...props}  />\r\n    \r\n  \r\n}\r\n\r\nexport default InputBase;","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport {Mentions} from 'antd'\r\nimport {PlusOutlined, DeleteOutlined} from '@ant-design/icons'\r\n\r\nimport './Pod.scss';\r\n\r\nconst Pod = ({actived, label, readOnly, height, onPlus, onDelete, onChoose, showDelete, onAction}) => {\r\n  \r\n  function deleteHandl(ev) {\r\n    ev.stopPropagation()\r\n    showDelete && onDelete(height)\r\n  }\r\n  \r\n  return(\r\n  <div className={classNames('pod', actived ? 'pod-actived' : 'pod-just')} onClick={() => onChoose(height)}>\r\n      <div className='pod__top'>\r\n        <div className='pod__top_height'>\r\n          {height}\r\n        </div>\r\n        {\r\n          !readOnly && \r\n          <div className='pod__top_btns'>\r\n            <div \r\n              className={classNames('pod__top_btns_delete', showDelete ? 'pod__top_btns_delete-show' : 'pod__top_btns_delete-hide')} \r\n              onClick={(ev) => {ev.stopPropagation(); deleteHandl(ev); onAction()}}>\r\n              <DeleteOutlined />\r\n            </div>\r\n            <div className='pod__top_btns_plus' onClick={(ev)=> {ev.stopPropagation();onPlus(height); onAction()}}>\r\n              <PlusOutlined />\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n      <div className={classNames('pod__bottom',actived ? 'pod__bottom-actived' : 'pod__bottom-just')}>\r\n        <Mentions value={label.slice(0, 45)} readOnly rows={2} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pod","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport {Button} from 'antd'\r\n\r\nimport './Button.scss'\r\n\r\nconst ButtonBase = (\r\n  {\r\n    children, \r\n    place='main',\r\n     clickHandler, \r\n     isCircle, \r\n     disabled=false,\r\n     htmlType='button'\r\n    }) => {\r\n\r\n  return(\r\n    <Button \r\n        disabled={disabled}\r\n        shape={isCircle ? \"circle\": null}\r\n        onClick={clickHandler}\r\n        type='primary' \r\n        htmlType={htmlType}\r\n        className={classNames('button', 'button__'+place)}>\r\n        {children}\r\n      </Button>\r\n  )\r\n}\r\n\r\nexport default ButtonBase;","import React from 'react'\r\nimport {Mentions} from 'antd'\r\n\r\nimport './Mentions.scss'\r\n\r\nconst MentionsBase = ({row, placeholder='', changeHandler, value, readOnly=false, disabled}) => {\r\n  return (\r\n    <Mentions \r\n      disabled={disabled}\r\n      readOnly={readOnly}\r\n      value={value}\r\n      onChange={(ev) => {changeHandler(ev); console.log('WTF')}}\r\n      rows={row}\r\n      placeholder={placeholder}\r\n      className='realMentions'\r\n      >\r\n  </Mentions>\r\n  )\r\n}\r\n\r\nexport default MentionsBase\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {v4} from 'uuid'\r\n\r\nimport { Tabs } from 'antd';\r\nimport {Mentions, Input, Button} from '@/components'\r\n\r\nimport './Answers.scss'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n// Проблема решается через абсолютное отключение от едитора и работой напрямую с ворк бренчем\r\n// Так же в эдиторе все данные будут динамически редактировать ВБ\r\n\r\nconst Answers = ({value, setAnswers, setActiveKey, readOnly}) => {\r\n\r\n  const Events = {\r\n    addProps: function(arr) {\r\n      return arr.map((el, i) => {\r\n        el.closable = arr.length !== 2;\r\n        el.key = i+'';\r\n        return el;\r\n      })\r\n    },\r\n    remove: function(targetKey) {\r\n      const {panes, activeKey} = value;\r\n      let newActiveKey,\r\n      newPanes,\r\n      workInd;\r\n      for(let i in panes) {\r\n        if(targetKey === panes[i].key) {\r\n          workInd = i;\r\n        }\r\n      }\r\n      newActiveKey = panes[workInd-(targetKey === \"0\" ? 0 : 1)].key\r\n      let firstPart = [...panes].slice(0,+workInd);\r\n      let secondPart = [...panes].slice(+workInd+1);\r\n      newPanes = firstPart.concat(secondPart)\r\n\r\n      newPanes = this.addProps(newPanes);\r\n      setAnswers({\r\n        activeKey: newActiveKey,\r\n        panes: newPanes\r\n      })\r\n      //setTabsData()\r\n    },\r\n    add: function () {\r\n      debugger\r\n      let panes = value.panes\r\n      let newPanes = [...panes].concat({content: \"\", ref: \"\", wayId: v4(), wayColor: 'pink'});\r\n      newPanes = this.addProps(newPanes);\r\n      setAnswers({panes: newPanes, activeKey: newPanes.length-1+'', })\r\n    }\r\n  }\r\n\r\n  function changeHandl(ev) {\r\n    setActiveKey({\r\n      activeKey: ev\r\n    })\r\n  }\r\n\r\n  function editHandl(targetKey, action) {\r\n    Events[action](targetKey);\r\n  }\r\n\r\n  function questionChangeHandl(ev) {\r\n    let newPanes = value.panes;\r\n    newPanes[value.activeKey].content = ev;\r\n    setAnswers({...value, panes: newPanes})\r\n  }\r\n\r\n  function refChangeHandl(ev) {\r\n    ev.persist()\r\n\r\n    let refData = ev.target.value;\r\n    let newPanes = value.panes;\r\n    newPanes[value.activeKey].ref = refData;\r\n    setAnswers({...value,panes: newPanes })\r\n  }\r\n\r\n  const {panes, activeKey} = value;\r\n  debugger\r\n  return (\r\n    <Tabs\r\n      type={readOnly ? 'card' : \"editable-card\"}\r\n      onChange={changeHandl}\r\n      activeKey={activeKey}\r\n      onEdit={editHandl}\r\n      className=''\r\n    >\r\n      {panes.map((pane, i) => (\r\n        <TabPane \r\n          tab={pane.key} \r\n          key={pane.key} \r\n          closable={activeKey === i+'' && pane.closable}>\r\n          {<div style={{margin: \"1px\"}}>\r\n            <Mentions \r\n              readOnly={readOnly} \r\n              row={3} \r\n              placeholder={'Answer..'} \r\n              value={pane.content} \r\n              changeHandler={questionChangeHandl}\r\n              />\r\n            <div className='refToPod'>\r\n              <Input \r\n                readOnly={readOnly} \r\n                value={pane.ref} \r\n                placeholder=\"Ref\" \r\n                changeHandler={refChangeHandl} \r\n                /> \r\n            </div>\r\n            </div>}\r\n        </TabPane>\r\n      ))}\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default Answers","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport { Select } from 'antd';\r\n\r\nimport './Select.scss';\r\n\r\nconst {Option} = Select;\r\nconst SelectBase = ({changeHandler, isCreate, isSuper, projects, friends, workPCD, superId, nickName, disabled}) => { //defData, options}) => { //, options\r\n\r\n  let defData;\r\n  let options =  [  ...[{value: 'all', disabled:false}],\r\n    {value: nickName, disabled: true}]\r\n    .concat(friends.map(({userData:{superId, nickName}}) => ({value: nickName, superId, disabled: false})))\r\n  \r\n\r\n  if(isCreate) {\r\n    // сделай проверку на повторение никнейма и если она срабатывает, то модифицируй ник (1)\r\n    defData = [nickName];\r\n  } else {\r\n\r\n    let projectInd;\r\n    for(let i in projects) {\r\n      if(projects[i].superId === workPCD.projectId) {\r\n        projectInd = i;\r\n      }\r\n    };\r\n\r\n    if(isSuper) {\r\n      defData = superIdToNick(projects[projectInd].superAccess);\r\n    } else {\r\n      defData = superIdToNick(projects[projectInd].access);\r\n    }\r\n  }\r\n\r\n  function superIdToNick(supers) {\r\n    let nicks = [];\r\n    if(supers.includes('all')) {\r\n      nicks.push('all')\r\n    }\r\n    supers.forEach(sup => {\r\n      [{userData:{superId, nickName}}].concat(friends).forEach(({userData: {superId, nickName}}) => {\r\n        if(sup === superId) {\r\n          nicks.push(nickName)\r\n        }\r\n      })\r\n    });\r\n    return nicks\r\n  }\r\n  //const options = [{value: 'Es_ILias', disabled: true}];\r\n  // let defData = accessData.slice()\r\n  // .map(({superId, nickName}) => accessedCreators.includes(superId) ? nickName : null);\r\n  // let options = accessData.map(({nickName, disabled}) => ({value: nickName, disabled}));\r\n\r\n  // const {defData, options} = state;\r\n  // ребилд \r\n  return (\r\n    <Select\r\n      disabled={disabled}\r\n      mode=\"multiple\"\r\n      style={{ width: '100%' }}\r\n      placeholder=\"Please select\"\r\n      defaultValue={defData}\r\n      onChange={changeHandler}\r\n      optionLabelProp=\"label\"\r\n    >\r\n     { options.map(({value, disabled, superId}) => {\r\n       return(\r\n        <Option key={superId} value={value} label={value} disabled={disabled}>\r\n          <div>\r\n            {value}\r\n          </div>\r\n       </Option>\r\n       )\r\n     })}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default connect(({main: {projects, friends, workPCD, personObj: {userData: {nickName, superId}}}}) => \r\n({projects, friends, workPCD, nickName, superId}), {})(SelectBase)\r\n\r\n{/* {accessData && accessData.map(({superId, nickName, disabled}) => (\r\n        <Option \r\n          disabled={disabled}\r\n          label={nickName}\r\n          value={nickName} \r\n          key={nickName}>\r\n            {nickName}</Option>\r\n      ))} */}","import React from 'react'\r\nimport {Button} from '@/components'\r\n\r\nimport './AddToCompadre.scss'\r\n\r\nconst AddToCompadre = ({nickName, src, projectCount, onAdd, superId}) => {\r\n  return (\r\n    <div className='addTC'>\r\n      {\r\n          src\r\n          ? <div className='addTC__avatar'>\r\n              <img src={src} alt=\"\"/>\r\n            </div>\r\n          : <div className='addTC__avatar_plug'>\r\n              {nickName.substring(0, 2)}\r\n            </div>\r\n      }\r\n      <div className='addTC__data'>\r\n        <div className='addTC__data_nickName'>{nickName}</div>\r\n        <div className='addTC__data_projectCount'>{`Projects: ${projectCount}`}</div>\r\n      </div>\r\n      <div>\r\n        <Button clickHandler={() => onAdd(superId)}>Accept</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddToCompadre;","import React, {useState, useRef, useEffect} from 'react';\r\nimport classNames from 'classnames';\r\nimport { Tag, Upload, message, Select, Tooltip, Popconfirm} from 'antd';\r\n\r\nimport { InboxOutlined, FileAddOutlined, DeleteOutlined} from '@ant-design/icons';\r\n\r\nimport {Mentions, Button, BoxImage, ImageTooltip, CheckTags} from '@/components';\r\n\r\nimport './ArtPart.scss'\r\n\r\nconst { Option } = Select;\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Dragger } = Upload;\r\n\r\nconst ArtPart = (\r\n  {\r\n    value, \r\n    row, \r\n    mentionsHandler, \r\n    fileHandler, \r\n    artSrc, \r\n    illustrations, \r\n    unsetIllust, \r\n    setIllust, \r\n    removeIllust,\r\n    readOnly\r\n  }) => {\r\n  // const wrapperRef = useRef(null);\r\n  // const pictureRef = useRef(null)\r\n  const [workPlace, setWorkPlace] = useState('description');\r\n  const [show, setShow] = useState(false)\r\n  // const [sizes, setSizes] = useState({width: 'auto', height: 'auto'})\r\n  // const [workSrc, setWorkSrc] = useState(null)\r\n  // const [restart, setRestart] = useState(true)\r\n  // const [show, setShow] = useState(false)\r\n\r\n  // Фикс пробликиваний и недорабатывания..\r\n  // useEffect(() => {\r\n  //   // чисто памятник\r\n  //   if(pictureRef.current) {\r\n  //     if(workSrc !== artSrc) {\r\n  //       setWorkSrc(artSrc);\r\n  //       setSizes({width: 'auto', height: 'auto'});\r\n  //       setShow(false);\r\n  //       return\r\n  //     }\r\n\r\n  //     const {naturalHeight: pH, naturalWidth: pW} = pictureRef.current;\r\n  //     const {offsetHeight: wH, offsetWidth: wW} = wrapperRef.current;\r\n  //     if(pH === 0 && pW === 0) {\r\n  //       setRestart(!restart)\r\n  //       return\r\n  //     }\r\n  //     if(sizes.width === sizes.height && (pH !== 0 && pW !== 0)) {\r\n  //       if(pW > pH) {\r\n  //         //width 100% \r\n  //         setSizes({width:'100%', height: 'auto'});\r\n  //       } else {\r\n  //         setSizes({width:'auto', height: '100%'});\r\n  //       }\r\n  //       setShow(true)\r\n  //     }\r\n      \r\n\r\n  //   }\r\n  // });\r\n\r\n\r\n  // function chooseFromExist() {\r\n  //   console.log('CHOOSE_FROM_EXIST');\r\n  //   setArtSrc(illustrations[0]) // сделать здесь полноценные редактор пикч.\r\n  // } \r\n\r\n  let  checkTabsProps = {\r\n    firstVal: 'Description',  \r\n    firstHandler:() => setWorkPlace('description'), \r\n    secondVal: 'Picture', \r\n    secondHandler: () => setWorkPlace('picture'), \r\n    checkData: workPlace === 'description'\r\n  }\r\n\r\n  return (\r\n    <div className='artPart'>\r\n      <div className='artPart__main'>\r\n        <div className={classNames('artPart__main_description', 'artPart__main_description'+(workPlace==='picture'?'-hide':'-show'))}>\r\n          <Mentions \r\n            readOnly={readOnly}\r\n            value={value} \r\n            row={row} \r\n            placeholder={`Arts description`} \r\n            changeHandler={mentionsHandler}/> \r\n        </div>\r\n        <div  className={classNames('artPart__main_picture','artPart__main_picture'+(workPlace==='picture'?'-show':'-hide'))}>\r\n          { typeof artSrc === 'string'\r\n            ? <div className='pictureWrapper'>\r\n                <div className='pictureWrapper__shadow'>\r\n                  <div className='buttonWrapper'>\r\n                    <span className='pictureWrapper__shadow_unset' onClick={(ev) => !readOnly && unsetIllust(ev)}>x</span>\r\n                    <div className='pictureWrapper__shadow_remove'>\r\n                      <Popconfirm placement=\"rightBottom\" title={'Remove this picture'} onConfirm={() => !readOnly && removeIllust(artSrc)} okText=\"Yes\" cancelText=\"No\">\r\n                        <DeleteOutlined style={{color: 'white'}} />\r\n                      </Popconfirm>  \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <BoxImage artSrc={artSrc} />\r\n              </div>\r\n            : <div className='artPart__main_picture_inputs'>\r\n                <input disabled={readOnly} style={{display: 'none'}} name='file' type='file' id='file' onChange={fileHandler} />\r\n                <label htmlFor='file'><FileAddOutlined style={{fontSize: '3vh', color: \"grey\", marginBottom: '1vh', cursor: 'pointer'}} /></label>\r\n                <Select\r\n                  disabled={readOnly}\r\n                  style={{width: '100%'}}\r\n                  showSearch\r\n                  placeholder=\"Select illustration\"\r\n                  >\r\n                  {illustrations.map(({name, src}) => {\r\n                     return <Option>\r\n                      <div className='illustSelect' > \r\n                        <div className='illustSelect__actions' onClick={() => setIllust(src)}>\r\n                          {name}\r\n                        </div>\r\n                         \r\n                      </div>\r\n                      </Option>\r\n                  })}\r\n                  </Select>\r\n        \r\n              </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      <CheckTags {...checkTabsProps} />\r\n      {/* <div className='artPart__controllers'>\r\n        <CheckableTag\r\n          checked={workPlace === 'description'}\r\n          onClick={() => workPlace !== 'description' && setWorkPlace('description')}\r\n        >\r\n          Description\r\n        </CheckableTag>\r\n        <CheckableTag\r\n          checked={workPlace === 'picture'}\r\n          onClick={() => workPlace === 'description' && setWorkPlace('picture')}\r\n        >\r\n          Picture\r\n        </CheckableTag>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ArtPart","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nimport './BoxImage.scss'\r\n\r\nconst BoxImage = ({artSrc, clickHandler=()=>{}}) => {\r\n  const wrapperRef = useRef(null);\r\n  const pictureRef = useRef(null)\r\n  const [sizes, setSizes] = useState({width: 'auto', height: 'auto'});\r\n  const [workSrc, setWorkSrc] = useState(null);\r\n  const [restart, setRestart] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // чисто памятник\r\n    if(pictureRef.current) {\r\n      if(workSrc !== artSrc) {\r\n        setWorkSrc(artSrc);\r\n        setSizes({width: 'auto', height: 'auto'});\r\n        setShow(false);\r\n        return\r\n      }\r\n\r\n      const {naturalHeight: pH, naturalWidth: pW} = pictureRef.current;\r\n      const {offsetHeight: wH, offsetWidth: wW} = wrapperRef.current;\r\n      if(pH === 0 && pW === 0) {\r\n        setRestart(!restart)\r\n        return\r\n      }\r\n      if(sizes.width === sizes.height && (pH !== 0 && pW !== 0)) {\r\n        if(pW/pH > wW/wH) {\r\n          //width 100% \r\n          setSizes({width:'100%', height: 'auto'});\r\n        } else {\r\n          setSizes({width:'auto', height: '100%'});\r\n        }\r\n        setShow(true)\r\n      }\r\n      \r\n\r\n    }\r\n  });\r\n\r\n  return <div ref={wrapperRef} className='boxImage' onClick={clickHandler} >\r\n    <img style={{opacity: show ? 1 : 0}} ref={pictureRef} width={sizes.width} height={sizes.height} src={workSrc} />\r\n  </div>\r\n}\r\n\r\nexport default BoxImage;","import React from 'react';\r\nimport classNames from 'classnames'\r\n\r\nimport {Tooltip} from 'antd'\r\n\r\nimport './Leaf.scss'\r\n\r\nconst Leaf = ({data, current, clickHandler}) => {\r\n\r\n  function getConnects() {\r\n    debugger\r\n    let connects = [];\r\n    let originBoost = data.branch.boost;\r\n    let i = 0;\r\n    while(i < data.branch.choseCount) {\r\n      let neighbourBoost = data.branch['q'+i].branch.boost;\r\n      if(neighbourBoost > originBoost) {\r\n        connects.push(<div \r\n          style={{bottom: '1.25vh', height: (neighbourBoost-originBoost)*3.5+'vh'}} \r\n          className='leaf__main_connect'></div>)\r\n      } else if(neighbourBoost < originBoost) {\r\n        connects.push(<div \r\n          style={{top: '1.25vh', height: (originBoost-neighbourBoost)*3.5+'vh'}} \r\n          className='leaf__main_connect'></div>)\r\n      }\r\n      i++;\r\n    };\r\n    return connects\r\n  };\r\n \r\n  return <div className='leaf'>\r\n      {\r\n      data && <div className='leaf__tail'></div>\r\n    }\r\n    {\r\n      data ?\r\n      <Tooltip placement=\"bottom\" title={`${data.branch.branchDirection}`}>\r\n        <div onClick={clickHandler}  className={classNames('leaf__main', current && 'leaf__main-current')}>\r\n        {data && getConnects()}\r\n        <div className='leaf__main_pods'>\r\n          {data.branch.base.length}\r\n        </div>\r\n        {data.branch.question && \r\n          <Tooltip title={`${data.branch.question.main}`}><div className={classNames('leaf__boll', 'leaf__boll-right')}></div></Tooltip>}\r\n        {data.hasOwnProperty('ans') &&\r\n           <Tooltip title={`${data.ans}`}  ><div className={classNames('leaf__boll', 'leaf__boll-left')}></div></Tooltip>}\r\n      </div>\r\n      </Tooltip> \r\n      : null\r\n    }\r\n  \r\n  </div>\r\n}\r\n\r\nexport default Leaf;","import React, {useState} from 'react'\r\n\r\nimport {Mentions, CheckTags} from '@/components';\r\n\r\nimport './Directions.scss';\r\n\r\nconst Directions = ({branchDirection, wayDirection, branchHandler, wayHandler, row, readOnly}) => {\r\n  const [workPlace, setWorkPlace] = useState('branch')\r\n\r\n  function changeHandler(ev) {\r\n\r\n    workPlace === 'path'\r\n    ? wayHandler(ev)\r\n    : branchHandler(ev)\r\n  } \r\n  let checkTagsProps = {\r\n    firstVal: 'Branch',  \r\n    firstHandler: () => setWorkPlace('branch'), \r\n    secondVal: 'Way', \r\n    secondHandler:() => setWorkPlace('path'), \r\n    checkData: workPlace === 'branch'\r\n  }\r\n\r\n  return (\r\n    <div className='directons'>\r\n      <Mentions \r\n          disabled={workPlace === 'path'}\r\n          readOnly={readOnly}\r\n          value={workPlace === 'path' ? wayDirection : branchDirection}\r\n          row={row}\r\n          placeholder={workPlace === 'path' ? \"Way (SOON)\" : \"Branch dir..\"}\r\n          changeHandler={changeHandler} />\r\n        <CheckTags {...checkTagsProps} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Directions","import React from 'react'\r\n\r\nimport {Tag} from 'antd'\r\n\r\nimport './CheckTags.scss'\r\n\r\nconst { CheckableTag } = Tag;\r\nconst CheckTags = ({firstVal,  firstHandler, secondVal, secondHandler, checkData}) => {\r\n  return (\r\n    <div className='checkTags'>\r\n        <div style={{flex: '5'}}>\r\n          <CheckableTag\r\n            checked={checkData}\r\n            onClick={() => !checkData && firstHandler()}\r\n          >\r\n            {firstVal}\r\n          </CheckableTag>\r\n        </div>\r\n        <div style={{flex: '5'}} >\r\n          <CheckableTag\r\n            checked={!checkData}\r\n            onClick={() => checkData && secondHandler()}\r\n          >\r\n            {secondVal}\r\n          </CheckableTag>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckTags","export const addPod = payload => ({\r\n  type: 'ADD_POD',\r\n  payload\r\n})\r\nexport const deletePod = payload => ({\r\n  type: 'DELETE_POD',\r\n  payload\r\n})\r\nexport const savePod = payload => ({\r\n  type: 'SAVE_POD',\r\n  payload\r\n})\r\nexport const choosePod = payload => ({\r\n  type: 'CHOOSE_POD',\r\n  payload\r\n})\r\nexport const addProject = payload => ({\r\n  type: 'ADD_PROJECT',\r\n  payload\r\n})\r\nexport const setupProject = payload => ({\r\n  type: 'SETUP_PROJECT',\r\n  payload\r\n})\r\nexport const selectProject = payload => ({\r\n  type: \"SELECT_PROJECT\",\r\n  payload\r\n})\r\nexport const selectVersion = payload => ({\r\n  type: 'SELECT_VERSION',\r\n  payload\r\n})\r\nexport const openPlace = payload => ({\r\n  type: 'OPEN_PLACE',\r\n  payload\r\n})\r\nexport const updateUsers = users => ({\r\n  type: \"UPDATE_USERS\",\r\n  payload: users\r\n})\r\nexport const updateApplicantList = payload => ({\r\n  type: 'UPDATE_APPLICANT_LIST',\r\n  payload\r\n})\r\nexport const previewPerson = payload => ({\r\n  type: 'PREVIEW_PERSON',\r\n  payload\r\n})\r\nexport const cleanApplicantList = payload => ({\r\n  type: 'CLEAN_APPLICANT_LIST',\r\n  payload\r\n})\r\nexport const addFriend = payload => ({\r\n  type: 'ADD_FRIEND',\r\n  payload\r\n})\r\nexport const setIllustrations = payload => ({\r\n  type: 'SET_ILLUSTRATIONS',\r\n  payload\r\n})\r\nexport const setMapData = payload => ({\r\n  type: 'SET_MAP_DATA',\r\n  payload\r\n})\r\nexport const deleteData = payload => ({\r\n  type: 'DELETE',\r\n  payload\r\n})\r\nexport const newFriendProject = payload => ({\r\n  type: 'NEW_FRIEND_PROJECT',\r\n  payload\r\n})\r\nexport const logOut = () => ({\r\n  type: 'LOGOUT'\r\n})\r\n// export const openProjectSetup = () => ({\r\n//   type: 'OPEN_PROJECT_SETUP'\r\n// })\r\n// export const openVersionsEditor = () => ({\r\n//   type: 'OPEN_VERSIONS_EDITOR'\r\n// })\r\n// export const opedProjectCreator = () => ({\r\n//   type: 'OPEN_PROJECT_CREATOR'\r\n// })\r\n// export const openSocialPanel = () => ({\r\n//   type: ' OPEN_SOCIAL_PANEL'\r\n// })\r\nexport const addVersion = payload => ({\r\n  type: 'ADD_VERSION',\r\n  payload\r\n})\r\nexport const changeBranch = payload => ({\r\n  type: \"CHANGE_BRANCH\",\r\n  payload\r\n})\r\nexport const changeMaster = payload => ({\r\n  type: 'CHANGE_MASTER',\r\n  payload\r\n})\r\nexport const saveVersion = payload => ({\r\n  type: 'SAVE_VERSION',\r\n  payload\r\n})\r\n\r\nexport const loginIn = () => ({\r\n  type: 'LOGIN_IN'\r\n})\r\nexport const choosePerson = payload => ({\r\n  type: 'CHOOSE_PERSON',\r\n  payload\r\n})\r\nexport const chooseMe = payload => ({\r\n  type: 'CHOOSE_ME',\r\n  payload\r\n})\r\nexport const accessControl = payload => ({\r\n  type: 'ACCESS_CONTROL',\r\n  payload\r\n})\r\n\r\n//GETTERS\r\nexport const updateData = payload => ({\r\n  type: 'UPDATE_DATA', \r\n  payload\r\n})\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = window.location.origin\r\naxios.defaults.headers.common['token'] = localStorage.token;\r\n\r\nwindow.axios = axios;\r\n\r\nwindow.sendErrors = (message) => {\r\n  axios.post('/error', {message, data: window.reduxHistory})\r\n    .then(() => console.log(\r\n      '%c%s', \r\n      'color: mediumseagreen; font-size: 20px;', \r\n      'Спасибо, что помогаете улучшить софт. Если после перезагрузки ошибка не пройдет, то пишите мне личку: https://vk.com/es_ilias'\r\n      ))\r\n}\r\n  \r\nexport default axios","import axios from '../axios'\r\n\r\nexport default {\r\n  login: (data) => axios.post('/auth/login', data),\r\n  register: (data) => axios.post('/auth/register', data),\r\n  checkToken: () => axios.post('/auth/check')\r\n}\r\n","import io from 'socket.io-client'\r\nimport store from '@/store';\r\nimport {\r\n  updateApplicantList, \r\n  addFriend, \r\n  accessControl, \r\n  updateData, \r\n  newFriendProject,\r\n } from '@/actions'\r\n\r\nimport {openNotification} from '@/utils'\r\n\r\n\r\nconst socket = io(window.location.origin, {\r\n  transports: ['polling']\r\n}); \r\n\r\nsocket\r\n  .on('connect', () => {\r\n    //console.log('%c%s', 'color: green; font-size: 23px', \"REAL_SOCKET_CONNECT\")\r\n    //console.log(localStorage.token)\r\n    //let realToken = localStorage.token;\r\n    //realToken && socket.emit('JOIN', {token: realToken});\r\n  })\r\n  .on('FORB', () => {\r\n    // console.log('%c%s', 'color: pink; font-size: 18px;', 'FORBIDDEN');\r\n    delete localStorage.token\r\n  })\r\n  // РАБОТКА)))ы\r\n  .on('FORBIDDEN', () => {\r\n    //console.log('%c%s', 'color: darkred; font-size: 22px;', 'GET_FORBIDDEN')\r\n  })\r\n  .on('VERSION_UPDATE', (pass) => { // добавь фильтровалку по сендеру\r\n    store.dispatch(updateData({data: pass, address:'versions'})) \r\n    // console.log('GG_WP')\r\n    // console.log('%c%s','color: indigo; font-size: 22px;','VERSION_UPDATE_PASS: ', pass)\r\n  })\r\n  .on('NEW_VERSION', pass => {\r\n    //console.log('%c%s', 'color: goldenrod; font-size: 22px;', 'NEW_VERSION_YOU_PROJECT', pass)\r\n  })\r\n  // ACCESS ZONE\r\n  // существует критический баг, при изменении all доступа со стороны выбираемой персоны, во время пиков\r\n  // теоретически решается хардкодом. Создание новых обработчиков или добавление аргументов к нижним... \r\n  .on('NEW_ACCESS', pass => {\r\n    \r\n    store.dispatch(accessControl({event: 'NEW', pass}))\r\n    //console.log('%c%s', 'color: forestgreen; font-size: 22px;', 'GET_SHOW_ACCESS', pass)\r\n  })\r\n  .on('NEW_SUPER_ACCESS', pass => {\r\n    openNotification({type: 'success', message: \"New super access\", description: `From ${pass.nickName}`})\r\n    store.dispatch(accessControl({event: 'NEW_SUPER', pass}))\r\n    //console.log('%c%s', 'color: forestgreen; font-size: 22px;', 'GET_SUPER_ACCESS', pass)\r\n  })\r\n  .on('KICK', pass => {\r\n    \r\n    store.dispatch(accessControl({event: 'KICK', pass}))\r\n  })\r\n  .on('SUPER_KICK', pass => {\r\n\r\n    store.dispatch(accessControl({event: 'SUPER_KICK', pass}))\r\n  })\r\n  // FRIEND EVENTS ZONE\r\n  .on('FRIEND_REQUEST', ({user}) => {\r\n    //console.log('%c%s', 'color: aqua; font-size: 22px', 'FRIEND_REQUEST:', user)\r\n    openNotification({type: 'info', message: 'New request to friend'})\r\n    store.dispatch(updateApplicantList(user))\r\n    // openNotification by antd \r\n  })\r\n  .on('ACCEPT_REQUEST', ({user}) => { // like callback from click in social\r\n    //console.log('%c%s', 'color: deeporange; font-size: 22px', 'ACCEPT_REQUEST:', user);\r\n    store.dispatch(addFriend(user))\r\n  })\r\n  .on('NEW_FRIEND', ({user}) => { // response on click \"ADD_TO_COMPADRE\"\r\n    //console.log('%c%s', 'color: navy; font-size: 22px', 'NEW_FRIEND:', user);\r\n    openNotification({type: 'success', message: 'Accept request', description: `New friend: ${user.userData.nickName}`})\r\n    store.dispatch(addFriend(user));\r\n    \r\n  })\r\n  .on('NEW_AVAILABLES', ({person, workPCD, payload: pass, sender}) => {\r\n    // wtf а как фильтрить?\r\n    // можно фильтрить по сэндеру === personObj.superId? ГО\r\n    const {main: {personObj: {userData: {superId}}}} =  store.getState();\r\n    superId !== sender && store.dispatch(updateData({data: {person, workPCD, pass}, address: 'available'}));\r\n  })\r\n  .on('NEW_ILLUSTRATIONS', ({person, workPCD, newIllust, action, sender}) => {\r\n    // Эксперитентальный подход со съеданием сендер ивента в лайв режиме.\r\n    //const {main: {personObj: {userData: {superId}}}} =  store.getState();\r\n    store.dispatch(updateData({data: { person, newIllust, action, workPCD}, address: 'illustrations'}))\r\n  })\r\n  .on('REQUEST_RIGHT', ({sender}) => {\r\n    const {main: {personObj: {userData: {superId}}, friends}} = store.getState();\r\n    superId !== sender && (() => {\r\n      let nickName;\r\n      friends.forEach(({userData: {superId: fsID, nickName: fnN}}) => {\r\n        if(fsID === sender) {\r\n          nickName = fnN;\r\n          return\r\n        }\r\n      });\r\n      openNotification({type: 'info', message: 'Right request', description: `By ${nickName}` })\r\n    })()\r\n  })\r\n  .on('NEW_FRIEND_PROJECT', ({project, sender}) => {\r\n\r\n    const {main: {personObj: {userData: {superId}}}} = store.getState();\r\n    superId !== sender && store.dispatch(newFriendProject({personId: sender, project}));\r\n  })\r\n  .on('NEW_FRIEND_VERSION', ({person, projectId, workVersion, sender}) => {\r\n\r\n    const {main: {personObj: {userData: {superId}}}} = store.getState();\r\n    superId !== sender && (() => {\r\n      store.dispatch(updateData({data: {person, projectId, workVersion}, address: 'new_version'}));\r\n      //openNotification({type: 'info', message: 'New version', description: })\r\n    })()\r\n  })\r\n  .on('DELETE', ({person, workPCD, target, sender}) => {\r\n    store.dispatch(updateData({data: {person, workPCD, target}, address: 'delete'}));\r\n\r\n  })\r\nlet lastV = null;\r\n\r\n// if(!localStorage.token && ) {\r\n//   socket.disconnect()\r\n// }\r\nstore.subscribe(() => {\r\n  let freshState = store.getState();\r\n  // if(freshState.main.users == false) {\r\n  //   socket.emit('GET_USERS', ({users}) => {\r\n  //     store.dispatch(updateUsers(users));\r\n  //   })\r\n  // }\r\n  if(freshState.main.workBranch && (lastV !== freshState.main.workBranch.v)) {\r\n    //console.log('%c%s', 'color: royalblue; font-size: 22px;', \"DEBUG_STATE: \", freshState);\r\n    let {main:{projectsCoordsData: pcd, workBranch: {v}, workPerson: person, workPCD, projects, personObj, availablePayload: avPayload}} = freshState\r\n    let token = localStorage.token;\r\n    let project = freshState.main.projects ? freshState.main.projects[0] : null;\r\n    let myLastProject = personObj.userData.myLastProject;\r\n\r\n    let checkSimbol = (v+'').substring(0, 1);\r\n    switch(checkSimbol) {\r\n      case \"c\": \r\n      //coord change handl;\r\n      socket.emit('UPDATE_PCD', {\r\n        token, pcd, person, \r\n        lastProject: workPCD ? workPCD.projectId : null, \r\n        myLastProject,\r\n        friends: personObj.userData.friends\r\n      })\r\n      break;\r\n      case \"p\":\r\n      // exist project change handl\r\n      socket.emit('UPDATE_PROJECTS', {\r\n        token, pcd, workVersion: (() => {\r\n\r\n          let {projects, workPCD: {projectId, workVersion}} = freshState.main;\r\n\r\n          let projectInd;\r\n          for(let i in projects) {\r\n            if(projects[i].superId === projectId){\r\n              projectInd = i;\r\n            }\r\n          }\r\n          let versionInd;\r\n          for(let i in projects[projectInd].versions) {\r\n            if(projects[projectInd].versions[i].superId === workVersion) {\r\n              versionInd = i;\r\n            }\r\n          }\r\n          return projects[projectInd].versions[versionInd].data;\r\n        })(),\r\n        projectId: workPCD.projectId,\r\n        versionId: workPCD.workVersion,\r\n        person\r\n      })\r\n      break;\r\n      case 'n': \r\n      // new project handl\r\n      // Доведи дело с access до конца..\r\n      socket.emit('NEW_PROJECT', {\r\n        token, project, pcd, myLastProject\r\n      })\r\n      break;\r\n      case 'v': \r\n      // new version handl\r\n      (() => {\r\n        let {workVersion, projectId} = workPCD;\r\n        socket.emit('NEW_VERSION', {\r\n          token, pcd, person, \r\n          projectId,\r\n          versionId: workVersion,\r\n          workVersion: (() => {\r\n            \r\n            let projectInd;\r\n            for(let i in projects) {\r\n              if(projects[i].superId === projectId) {\r\n                projectInd = i;\r\n              }\r\n            }\r\n            // НЕВЕРОЯТНО РЕДКИЙ БАГ МОЖЕТ ОТПРАВИТЬ ЧУЖУЮ ВЕРСИЮ, КАК ТВОЮ...\r\n            let versionInd;\r\n            for(let i in projects[projectInd].versions) {\r\n              if(projects[projectInd].versions[i].superId === workVersion) {\r\n                versionInd = i;\r\n              }\r\n            }\r\n\r\n            return projects[projectInd].versions[versionInd];\r\n          })()\r\n        })\r\n      })()\r\n      break;\r\n      case 's':\r\n      //SETUP worker\r\n      (() => {\r\n        const {kicked, superKicked, newObservers, newEditord} = freshState.main;\r\n        let projectInd;\r\n        for(let i in projects) {\r\n          if(projects[i].superId === workPCD.projectId) {\r\n            projectInd = i;\r\n          }\r\n        };\r\n        const {name, description, access, superAccess} = projects[projectInd];\r\n        socket.emit('SETUP_PROJECT', {\r\n          token,\r\n          projectData: {name, description, access, superAccess},\r\n          projectId: workPCD.projectId,\r\n          kicked,\r\n          superKicked,\r\n          newObservers,\r\n          newEditord\r\n        })\r\n      })()\r\n      break;\r\n      case 'a':\r\n      (() => {\r\n        socket.emit('UPDATE_AVAILABLE', {\r\n          token: localStorage.token, \r\n          workPCD, \r\n          person, \r\n          payload: avPayload\r\n        })\r\n      })()\r\n      break;\r\n      // case 'i':  //Сокет вылетает вместе axios запросом, вернее на его калбеке;\r\n      // (() => {\r\n      //   socket.emit('UPDATE_ILLUSTRATIONS')\r\n      // })()\r\n      break\r\n      case 'f':\r\n      (() => {\r\n\r\n      })()\r\n      break;\r\n      default: \r\n      debugger\r\n      //console.log('%c%s', 'color: red; font-size: 33px;', 'UNEXPECTED V:', v)\r\n      //err handl\r\n    }\r\n    lastV = v;\r\n  }\r\n  \r\n})\r\n\r\n\r\nexport default socket\r\n","import data from '@/core/data.json'\r\nimport {auth} from '@/core/api'\r\nimport {socket} from '@/core'\r\nimport {openNotification, upFirstSimbol} from '@/utils'\r\n\r\n\r\nexport const setUserData = payload => ({\r\n  type: 'SET_PROJECTS_DATA',\r\n  payload\r\n})\r\n\r\nconst dataInit = payload => ({\r\n  type: 'INIT',\r\n  payload\r\n})\r\n\r\nexport const fetchUserData = () => dispatch => {\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n     let objData = JSON.parse(data);\r\n     resolve(objData)\r\n     //\r\n    } catch(err) {\r\n      reject(false)\r\n      console.log('Error parse data json')\r\n    }\r\n  })\r\n  .then(data => dispatch(setUserData(data)))\r\n}\r\n\r\nconst effecter = ({status, token, data, msg}, isTokenLogin = false) => dispatch => {\r\n  if(status === 'success') {\r\n    openNotification({type: status, message: upFirstSimbol(status), description: msg})\r\n    localStorage.token = token;\r\n    socket.emit('JOIN', {token: localStorage.token});\r\n    dispatch(dataInit(data));\r\n  } else {\r\n    openNotification({type: status, message: upFirstSimbol(status), description: msg})\r\n    isTokenLogin && delete localStorage.token // wake up notice \r\n  }\r\n}\r\n\r\nexport const userLogin = (data) => dispatch => {\r\n  auth.login(data)\r\n    .then((reqData) => {\r\n      effecter(reqData.data)(dispatch)\r\n    })\r\n    .catch((err) => {\r\n      console.log('%c%s', 'color: red; font-size: 25px;',\"Error login: \", err)\r\n    })\r\n}\r\n\r\nexport const createUser = data => dispatch => {\r\n  auth.register(data)\r\n    .then((reqData) => {\r\n      effecter(reqData.data)(dispatch)\r\n    })\r\n    .catch(err => {\r\n      console.log('%c%s', 'color: red; font-size: 25px;', \"Error createUser: \", err)\r\n    })\r\n}\r\n\r\nexport const autoLoginWithToken = () => dispatch => {\r\n  auth.checkToken()\r\n    .then((reqData) => {\r\n      effecter(reqData.data, true)(dispatch)\r\n    })\r\n    .catch((er) => {\r\n      console.log('%c%s', 'color: red;font-size:33px;', 'AUTO_LOGIN_ERR:', er)\r\n    })\r\n}\r\n","// данные прилетают из уже существуюего дерева. Оно инициализируется с созданием проекта.\r\n// Информирование о пустых полях... Формик?...\r\n\r\n// Компонент отвечает за вывод и ввод данных о текущем поде или вопросе. Позволяет переключаться \r\n// Между этими состояниями, а так же переключатся во вложенность вопроса. \r\n// Так же при работе с изображениями все акшены вынесены в тело этого компонента.\r\n\r\n// Возможно это должно быть не здесь, но путь как целостная вещь наследуется по нулевому \r\n// вопросу и базируется на уровне версии.\r\nimport React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport {v4} from 'uuid'\r\n\r\nimport {Mentions, Button, Input, Answers, ArtPart, Directions} from '@/components'\r\nimport {mineInd} from '@/utils'\r\n\r\nimport {savePod, changeBranch, changeMaster, setIllustrations} from '@/actions' \r\n\r\nimport {axios, socket} from '@/core'\r\n\r\nconst Editor = (\r\n  {\r\n    savePod, \r\n    workBranch, \r\n    currentHeight, \r\n    changeBranch, v, \r\n    master, \r\n    nickName,\r\n    person,\r\n    workPCD,\r\n    changeMaster, \r\n    illustrations,\r\n    accessed,\r\n    superAccessed,\r\n  }) => {\r\n  // проверка на сохранение...\r\n  const [selectedType, setSelectedType] = useState('0'); // 0: POD, 1: QUESTION\r\n  const [data, setData] = useState({ // главное хранилище рабочих данных \r\n    label: \"\",\r\n    mainPart: \"\",\r\n    comment: \"\",\r\n    artsDesription: \"\",\r\n    artSrc: null,\r\n    branchDirection: \"\",\r\n    answers: [],\r\n    activeKey: \"0\",\r\n  })\r\n  const [checkCoord, setCheckCoord] = useState({checkHeight: null, checkPath: null}); // основые маркеры сравнения\r\n  const [saveState, setSaveState] = useState(null) // отвечает за том можно ли переместиться внутрь ответа или нет.\r\n  // Если данные не сохранены появлется не определенность в существовании ответа и баги. В будущем будут автосохранения\r\n  // С подтверждениями критических действий (удалить ответ, ВОПРОС)\r\n\r\nuseEffect(() => {\r\n\r\n  // здесь просходит основная магия ресборки. Сначала проверка на новые данные \r\n  let currentPath = workBranch.pos;\r\n  const {checkHeight, checkPath, checkV} = checkCoord; \r\n  \r\n  // надо добавить марке сравнения по проектам, хотя с этой работой справляется V\r\n  // последним звеном в проверке является фильтрация на V диспатч с изменением мастера, смотри описание eventHandl\r\n\r\n  if(workBranch.branch.base && ((currentHeight !== checkHeight) || (currentPath !== checkPath) || (v !== checkV && v[0] !== 'a'))) {\r\n    \r\n    // возможно некоторые проверки (чек данные ) рудиментарны..\r\n    // выбор источника данных (вопрос или база) на основе данных PCD данных (чекни коннект)\r\n    \r\n    let dataSource = currentHeight !== 'question' ? workBranch.branch.base[currentHeight] : workBranch.branch.question;\r\n\r\n    const {label, main, comment, picture: {src, alt}} = dataSource;  \r\n\r\n      // стандарный, пустой пак вопрос, который подставляется, если под не вопрос\r\n      // по факту просто заглушка для того, что бы было что подставить\r\n      // при переключении на вопрос\r\n\r\n      let answers = [ \r\n        { content: '', key: '0', closable: false, ref: '' }, // wayId: wayObj.wayId, wayColor: wayObj.color\r\n        { content: '', key: '1', closable: false, ref: '' }, // wayId: v4(), wayColor: 'grey'\r\n      ];\r\n      \r\n        // объявлены просто что бы было удобней вытаскивать\r\n        let realWorkBranch = workBranch.branch; \r\n        let choseCount = realWorkBranch.choseCount;\r\n\r\n        // если все такие есть вопросы, значит есть и ответы, которые нужно вытащить и закинуть в рабочую область\r\n        if(choseCount) { \r\n\r\n          let newAnswers = []\r\n\r\n          // формирование правильного ключа и создание нового массива ответов\r\n          for(let i = 0; i < choseCount; i++) {\r\n\r\n            let natKey = 'q'+i\r\n            let {ans, branch: {ref, wayId}} = realWorkBranch[natKey];\r\n\r\n            // let wayInd=[];\r\n            // mineInd(ways,wayId,'wayId',wayInd)\r\n\r\n            newAnswers.push({content: ans, key: i+'', closable: choseCount > 2, ref: ref ? ref : ''}) // wayId, color: ways[wayInd[0]].color\r\n          }\r\n          answers = newAnswers;\r\n        }\r\n      // подстановка существующих данных\r\n      setData({\r\n        label, \r\n        mainPart: main, \r\n        comment, \r\n        artsDesription: alt,\r\n\r\n        // проверка на удаленную картинку => при следующем сохранении данные будут перезаписаны.\r\n        artSrc: illustrations.some(({src: baseSrc}) => baseSrc === src) ? src : null,\r\n        answers,\r\n        activeKey: \"0\",\r\n        branchDirection: workBranch.branch.branchDirection,\r\n        // wayDirection: wayObj.wayDirection\r\n      });\r\n      setCheckCoord({checkHeight: currentHeight, checkPath: currentPath, checkV: v});\r\n      setSelectedType(currentHeight !== 'question' ? \"0\" : \"1\");\r\n      setSaveState(workBranch.v)\r\n  }\r\n})\r\n\r\n  let noMaster = master === null;\r\n\r\n  function masterHandl() {\r\n\r\n    // работой с переменной мастера, установка, отдача и запрос права у владельца права в комнате.\r\n    debugger\r\n    noMaster && changeMaster(true);\r\n    if(master === nickName) {\r\n      changeMaster(false)\r\n    } else {\r\n      // masterRequst   \r\n      socket.emit('REQUEST_RIGHT', {token: localStorage.token, person})\r\n    }\r\n    \r\n  }\r\n\r\n  function eventHandl(cb = null) {\r\n    \r\n    // мидл, который отлавливает действия для автоматического включения мастера и десейва.\r\n\r\n    // при включении мастера происходит диспатч с сайд эффектом от V, который улетает \r\n    // в виде сокет запроса на сервер и информирует всех, кто в комнате о изменении мастера на каком - либо\r\n    // проекте. Здесь при изменении мастера я локально сетую его и игнорю изменения связанные с мастером, тем самым не\r\n    // перерисовываю данные. Делается это для того что бы первый клик был услышан и сохранился в виде данных в основном \r\n    // хранилище, а иначе оно просто перерисуется с пустыми или старыми данными. \r\n\r\n    // можно чекать те данные которые уже имеются, но тогда нужно интегрировать проверки.. \r\n    // которые улетят на ребилд с полным переосмыслением рабочего процесса и архитектуры.\r\n\r\n    setSaveState(false);\r\n    noMaster && changeMaster(true);\r\n    cb && cb()\r\n  }\r\n\r\n  function fileHandler(ev) {\r\n\r\n    // работа с картинкой, которая прилетает из вне. Как только это происходит она автоматически назначается как рабочая\r\n    // и сохраняется на яндекс диске \r\n\r\n    ev.persist();\r\n    let formData = new FormData();\r\n    let workFile = ev.target.files[0];\r\n    let dataType = workFile.name.substring(0).split('.');\r\n    let newName = `${v4()}.${dataType[dataType.length-1]}`;\r\n\r\n    formData.append('picture', workFile, workFile.name);\r\n\r\n    // отправка форм даты с соотвествующим контент тайпом\r\n    const originUrl = window.location.origin\r\n    axios.post('/image', formData, {\r\n      headers: { 'Content-Type': \"multipart/form-data\", 'newname': newName}\r\n    }).then(({data: src}) => {\r\n\r\n      // пример рабочей бездиспатчевой логики \r\n      const realSrc = originUrl+src\r\n      let newIllustration = {name: ev.target.files[0].name, src: realSrc}\r\n      socket.emit('SET_ILLUSTRATIONS', {token: localStorage.token, person, workPCD, newIllustration, action: 'ADD'})\r\n      setData({...data, artSrc: realSrc });\r\n\r\n      //!!! добавить знатный денжер о всех последствиях удаления картинки\r\n\r\n    })\r\n  }\r\n\r\n  function setIllust(src = null) {\r\n\r\n    // работа с тем, что будет или небудет показано\r\n\r\n    setData({...data, artSrc: src})\r\n  }\r\n\r\n  function removeIllust(src) { //!!!--- Еще одно исключение??? РЕбилдни логику на съедание сендер эвента\r\n    \r\n    // удаление картинки, как из пакета иллюстраций так и с яндекс диска\r\n    \r\n    setData({...data, artSrc: null});\r\n    let workIllust;\r\n    for(let picture of illustrations) {\r\n      if(picture.src === src) {\r\n        workIllust = picture\r\n      }\r\n    }\r\n    socket.emit('SET_ILLUSTRATIONS', {token: localStorage.token, person, workPCD, newIllustration: workIllust, action: 'REMOVE'})\r\n  }\r\n\r\n  function typeBtnHandler() {\r\n\r\n    // смотри описание эвент хендлера ( eventHandl )\r\n\r\n    eventHandl(setSelectedType(selectedType === \"0\" ? \"1\" : \"0\"));\r\n    \r\n  }\r\n\r\n  const {label, mainPart, comment, artsDesription, branchDirection, wayDirection: cWayDirection, answers, activeKey, artSrc} = data;\r\n  return (\r\n    <>\r\n      <div className='editor__left'>\r\n        <div style={{display: 'flex'}}>\r\n          <div className='editor__left_dropMenu'>\r\n          <Button disabled={!accessed} clickHandler={() => {\r\n             currentHeight !== null && (workBranch.branch.choseCount === 0 || currentHeight === 'question') && typeBtnHandler();\r\n          }}>\r\n            {selectedType === '0' ? \"POD\" : \"QUESTION\"}\r\n          </Button>\r\n            \r\n          </div>\r\n          <div className='editor__left_label'>\r\n            <Input readOnly={!accessed} value={label} placeholder='Label' changeHandler={(ev) => {ev.persist(); setData({...data, label: ev.target.value}); eventHandl()}} />\r\n          </div>\r\n        </div>\r\n        <div className='editor__left_dialog'>\r\n          <Mentions readOnly={!accessed} value={mainPart} row={10} placeholder='Main part' changeHandler={ev => {setData({...data, mainPart: ev}); eventHandl()}}/>\r\n        </div>\r\n        <div className='editor__left_comment'>\r\n          <Mentions readOnly={!accessed} value={comment} row={6} placeholder='Comment/analysis' changeHandler={ev => {setData({...data, comment: ev}); eventHandl()}}/>\r\n        </div>\r\n        <div className={classNames('editor__left_tabs','editor__left_tabs'+ (selectedType === '1' ? '-show' : '-hide'))}>\r\n          <Answers \r\n            readOnly={!accessed}\r\n            setAnswers={({activeKey, panes: answers}) => {setData({...data, answers, activeKey}); eventHandl()}} \r\n            setActiveKey={({activeKey}) => setData({...data, activeKey})}  \r\n            value={{panes: answers, activeKey}}/>\r\n          {workBranch.branch['q'+activeKey] && saveState && \r\n          <div className={classNames('editor__left_tabs_cross')}>\r\n            <Button clickHandler={() => {changeBranch(+activeKey)}}>CROSS</Button>\r\n          </div>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='editor__right'>\r\n        <div style={{display: 'flex'}}>\r\n          <div className='editor__right_master'>\r\n            <div className='editor__right_master_status'>\r\n              {`M: ${master}`}\r\n            </div>\r\n            <div className='editor__right_master_btn'>\r\n              <Button disabled={!superAccessed} clickHandler={masterHandl}>\r\n                {noMaster \r\n                ? \"Stay master\" \r\n                : master === nickName \r\n                  ? \"Give away right\" \r\n                  : \"Request the right\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className='editor__right_save'>\r\n            <div className='editor__right_save_info'>{!saveState && <div>*</div>}</div>\r\n            <div className='editor__right_save_btn'>\r\n              <Button disabled={!accessed}  clickHandler={() => {savePod({selectedType, data}); setSaveState(true)}}>\r\n                SAVE\r\n              </Button>\r\n            </div>\r\n          </div>  \r\n        </div>\r\n        <div className='editor__right_dialog'>\r\n          <ArtPart \r\n            readOnly={!accessed} \r\n            artSrc={artSrc}\r\n            value={artsDesription} \r\n            row={10} \r\n            mentionsHandler={ev => {setData({...data, artsDesription: ev}); eventHandl()}}\r\n            fileHandler={(ev) => {fileHandler(ev); eventHandl()}}\r\n            illustrations={illustrations}\r\n            unsetIllust={setIllust}\r\n            setIllust={setIllust}\r\n            removeIllust={removeIllust}\r\n            />\r\n          {/* <Mentions  row={10} placeholder={`Arts description`} changeHandler={}/> */}\r\n        </div>\r\n        <div className='editor__right_branchDir'>\r\n          <Directions \r\n            readOnly={!accessed} \r\n            row={7}\r\n            wayHandler={() => ({})}\r\n            branchHandler={ev => {setData({...data, branchDirection: ev}); eventHandl();}}\r\n            wayDirection={cWayDirection}\r\n            branchDirection={branchDirection}/>\r\n          {/* <Mentions \r\n            value={branchDirection} \r\n            row={7} \r\n            placeholder={`Branches direction`} \r\n            changeHandler={ev => {; eventHandl()}}/> */}\r\n        </div>\r\n        <div className={classNames('editor__right_metaData', 'editor__right_metaData'+(selectedType === '1' ? '-show' : '-hide'))}>\r\n          <Mentions disabled={true} row={6} placeholder={\"Meta data (SOON)\"}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {workBranch, workPCD, projects, personObj, workPerson}}) => {\r\n\r\n  // мастер дата - информация о присутствии какого - либо чела за работой над версией. Используется для того\r\n  // Что бы локать возможность редачить дригим персонажам, которые сейчас просматривают проект, а иначе нужно буфферить\r\n  // То что воводит один, отправляет другой. В общем исключаются другие источники истины, кроме рабочего чела.\r\n  debugger\r\n  let projectInd = [];\r\n  let versionInd = [];\r\n  let master = null;\r\n  let accessed = false;\r\n  let superAccessed = false;\r\n  const nickName = personObj.userData.nickName;\r\n  if(workPCD !== null) {\r\n    // в мастере будет никнейм \r\n    mineInd(projects, workPCD.projectId, 'superId', projectInd);    \r\n    mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n    master = projects[projectInd[0]].versions[versionInd[0]].master;\r\n\r\n  \r\n    \r\n    const targetAccess = projects[projectInd[0]].superAccess;\r\n    superAccessed = targetAccess.includes(personObj.userData.superId) || targetAccess.includes('all')\r\n\r\n    if(superAccessed) {\r\n      if(master === null || master === nickName) {\r\n        accessed = true;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  //let wayInd = [];\r\n  //mineInd(projects[projectInd[0]].versions[versionInd[0]].ways, workBranch.wayId, 'wayId', wayInd);\r\n  //wayObj = projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]];\r\n  // я не должен думать, есть ли здесь эти данные.... \r\n  \r\n  \r\n  return {\r\n    master,\r\n    illustrations:workPCD ? projects[projectInd[0]].versions[versionInd[0]].illustrations : [],\r\n    nickName,\r\n    //wayObj, \r\n    v: workBranch.v,\r\n    workBranch,\r\n    person: workPerson,\r\n    workPCD,\r\n    accessed,\r\n    superAccessed,\r\n    //ways: projects[projectInd[0]].versions[versionInd[0]].ways[wayInd[0]],\r\n    paths:workPCD ? projects[projectInd[0]].versions[versionInd[0]].paths : [],\r\n    currentHeight: workPCD ? workPCD[workPCD.workVersion].height : null, // обертка для поддержания первичной логики\r\n  }\r\n}, {savePod, changeBranch, changeMaster, setIllustrations})(Editor)","import React, {useState, useEffect}  from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core'\r\nimport {mineInd} from '@/utils'\r\n\r\nimport {Mentions, Button, Input, AccessSelect} from '@/components'\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\n\r\nimport {addProject, setupProject, saveVersion} from '@/actions'\r\n\r\nconst Project = (\r\n  {\r\n    addProject, \r\n    friends, \r\n    personSId, \r\n    projects, \r\n    workPCD, \r\n    isSetup, \r\n    setupProject,\r\n    workPerson,\r\n    versionComment,\r\n    isOwner,\r\n    saveVersion\r\n  }) => {\r\ndebugger\r\n\r\nconst [projectData, setProjectData] = useState({name: '', description: '', access: [], superAccess: []});\r\nconst [versionData, setVersionData] = useState({comment: ''})\r\n  useEffect(() => {\r\n    let {access, superAccess} = projectData;\r\n    if(!access.length || !superAccess.length) {\r\n      if(isSetup) {\r\n        // подъем уже существующих данных\r\n        let projectInd;\r\n        for(let i in projects) {\r\n          if(projects[i].superId === workPCD.projectId) {\r\n            projectInd = i;\r\n          }\r\n        };\r\n        const {access, superAccess, name, description} = projects[projectInd];\r\n        setProjectData({\r\n          name,\r\n          description,\r\n          access,\r\n          superAccess\r\n        })\r\n      } else {\r\n        //инициализация почти пустых аксессов\r\n        setProjectData({\r\n          ...projectData,\r\n          access: [personSId],\r\n          superAccess: [personSId],\r\n        })\r\n      }\r\n    };\r\n    if(isSetup && !versionData.comment.length) {\r\n      setVersionData({ comment: versionComment })\r\n    }\r\n  })\r\n\r\n  function nameHandl(ev) {\r\n    ev.persist()\r\n    console.log(ev.target.value)\r\n    setProjectData({\r\n      ...projectData,\r\n      name: ev.target.value+'',\r\n    })\r\n  }\r\n\r\n  function descriptionHandl(ev) {\r\n    setProjectData({\r\n      ...projectData,\r\n      description: ev+''\r\n    })\r\n  }\r\n\r\n  // ПОвторяющиеся никнеймы локаются.\r\n  function getSuperId(nicks) {\r\n    let superIdArr = [];\r\n    if(nicks.includes('all')) {\r\n      superIdArr.push('all')\r\n    }\r\n    nicks.forEach(nick => {\r\n      friends.forEach(({userData: {superId, nickName}}) => {\r\n        if(nick === nickName) {\r\n          superIdArr.push(superId)\r\n        }\r\n      })\r\n    });\r\n    return superIdArr\r\n  }\r\n\r\n  function createOrSaveHandler() {\r\n    //changeMaster(false)\r\n    isSetup && setupProject(projectData);\r\n    !isSetup && addProject(projectData)\r\n  }\r\n\r\n  function deleteHandler(target) {\r\n    \r\n    socket.emit('DELETE', {token: localStorage.token, workPCD, workPerson, target});\r\n  };\r\n  \r\n  function versionHandler(ev) {\r\n    ev.persist();\r\n    console.log(ev.target.value);\r\n    setVersionData({comment: ev.target.value})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='project__upPart'>\r\n        <div className='project__upPart_input'>\r\n          <Input readOnly={!isOwner} placeholder='name' changeHandler={nameHandl} value={projectData.name}/>\r\n        </div>\r\n        <div className='project__upPart_space' />\r\n        <div className='project__upPart_createBtn'>\r\n          <Button disabled={!isOwner} clickHandler={createOrSaveHandler}>\r\n            {isSetup ? \"SAVE PROJECT\" : \"CREATE\"}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className='project__bottomPart'>\r\n        <div className='project__bottomPart_description'>\r\n          <Mentions readOnly={!isOwner} value={projectData.description} row={2} placeholder='description' changeHandler={descriptionHandl}/>\r\n        </div>\r\n        <div className='project__bottomPart_access'>\r\n          <p>Юзеры, которые могут просматривать проект:</p>\r\n          <AccessSelect \r\n              disabled={!isOwner}\r\n              isCreate={isSetup === false}\r\n              isSuper={false}\r\n              changeHandler={(nickNames) => setProjectData({...projectData, access: [projectData.access[0]].concat(getSuperId(nickNames))}) } \r\n            />\r\n        </div>\r\n        <div className='project__bottomPart_access'>\r\n          <p>Юзеры, которые могут создавать новые версии и редактировать другие, при возможности:</p>\r\n          <AccessSelect \r\n              disabled={!isOwner}\r\n              isCreate={isSetup === false}\r\n              isSuper={true}\r\n              changeHandler={(nickNames) => setProjectData({...projectData, superAccess: [projectData.superAccess[0]].concat(getSuperId(nickNames))})} \r\n            />\r\n        </div>\r\n        {\r\n          isSetup && isOwner && <div className='project__bottomPart_delete'>\r\n            <div className='project__bottomPart_delete_space'></div>\r\n            <div className='project__bottomPart_delete_btn'>\r\n              <Button  clickHandler={() => deleteHandler('project')}><DeleteOutlined/> DELETE PROJECT</Button>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className='handler'>VERSION PART</div>\r\n        {\r\n          isSetup && <div className='project__versionPart'>\r\n            <div className='project__versionPart_top'>\r\n              <div className='project__versionPart_top_comment'>\r\n                <Input placeholder='name' changeHandler={versionHandler} value={versionComment} />\r\n              </div>\r\n              <div className='project__versionPart_top_space'>\r\n              </div>\r\n              <div className='project__versionPart_top_save'>\r\n                <Button clickHandler={saveVersion}>SAVE VERSION</Button>\r\n              </div>\r\n            </div>\r\n            {\r\n              isOwner && \r\n              <div className='project__versionPart_bottom'>\r\n                <div className='project__versionPart_bottom_space'>\r\n                </div>\r\n                <div className='project__versionPart_bottom_deleteBtn'>\r\n                  <Button clickHandler={() => deleteHandler('version')}><DeleteOutlined/> DELETE VERSION </Button>\r\n                </div>\r\n              </div>\r\n            }\r\n            \r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {\r\n  friends, \r\n  projects,\r\n  workPCD,\r\n  workPerson,\r\n  personObj: {\r\n    userData: {\r\n      nickName, \r\n      superId: personSId}\r\n    }}}, {isSetup}) => {\r\n      let res = {\r\n        friends, \r\n        nickName, \r\n        personSId, \r\n        projects, \r\n        workPCD, \r\n        workPerson\r\n      };\r\n      if(isSetup && workPCD) {\r\n        let projectInd = [];\r\n        let versionInd = [];\r\n        mineInd(projects, workPCD.projectId, 'superId', projectInd);\r\n        mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n\r\n        // const targetAccess = projects[projectInd[0]].superAccess;\r\n        // if(targetAccess.includes(personObj.userData.superId) || targetAccess.includes('all')) {\r\n        //   if(master === null || master === nickName) {\r\n        //     accessed = true;\r\n        //   }\r\n        // }\r\n\r\n        res.versionComment = projects[projectInd[0]].versions[versionInd[0]].comment;\r\n        \r\n      };\r\n      res.isOwner = workPerson === personSId;\r\n      return res\r\n      \r\n    }, {addProject, setupProject, saveVersion})(Project)","import React, {useState}  from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Button, Input} from '@/components'\r\n\r\nimport {addVersion} from '@/actions'\r\n\r\nconst Version = ({addVersion}) => {\r\n\r\nconst [projectData, setProjectData] = useState({comment: '', description: ''})\r\n\r\n  function nameHandl(ev) {\r\n    ev.persist()\r\n    console.log(ev.target.value)\r\n    setProjectData({\r\n      ...projectData,\r\n      comment: ev.target.value+''\r\n    })\r\n  }\r\n\r\n  function descriptionHandl(ev) {\r\n    setProjectData({\r\n      ...projectData,\r\n      description: ev+''\r\n    })\r\n  }\r\n\r\n  function sumbitHandl() {\r\n    addVersion(projectData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='version__input'>\r\n        <Input placeholder='comment' changeHandler={nameHandl}/>\r\n      </div>\r\n      <div className='version__space' ></div>\r\n      <div className='version__createBtn'>\r\n        <Button clickHandler={sumbitHandl}>\r\n          CREATE\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(({}) => ({}), {addVersion})(Version)","import React, {useState, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core'\r\nimport store from '@/store'\r\n\r\nimport {Button, AddToCompadre} from '@/components';\r\nimport {Select} from 'antd'\r\nimport {openNotification, mineInd} from '@/utils'\r\n\r\nimport {choosePerson, updateUsers, previewPerson, cleanApplicantList, updateData, changeMaster} from '@/actions'\r\n\r\nconst {Option} = Select\r\n\r\nconst Social = (\r\n  {\r\n    friends, \r\n    superId, \r\n    choosePerson, \r\n    applicantList, \r\n    cleanApplicantList, \r\n    updateData, \r\n    changeMaster,\r\n  }) => {\r\n  // возможность работать с челом в зависимости от доступов с его стороны...\r\n  const [person, setPerson] = useState(null);\r\n  const [personDetail, setPersonDetail] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n  const [newComrade, setNewComrade] = useState([]);\r\n\r\n  let isFriend = person ? person.friends.some(({superId:personId}) => personId === superId) : null;\r\n\r\n  useEffect(() => {\r\n    if(users === null) {\r\n      socket.emit('GET_USERS', {token: localStorage.token});\r\n      socket.on('NEW_USERS', ({users: newUsers}) => setUsers(newUsers))\r\n    }\r\n    if(person && !isFriend && (!personDetail || (personDetail.userData.superId !== person.superId))) {\r\n      socket.emit('GET_USERS_DETAIL', {token: localStorage.token, personId: person.superId});\r\n      socket.on('NEW_USERS_DETAIL', ({user}) => {\r\n        setPersonDetail(user)\r\n      })\r\n    } else if(person && (!personDetail || (personDetail.userData.superId !== person.superId))) {\r\n      //is Friend\r\n      let friendInd;\r\n      for(let i in friends) {\r\n        if(friends[i].userData.superId === person.superId) {\r\n          friendInd = i;\r\n        }\r\n      }\r\n      setPersonDetail(friends[friendInd]);\r\n    };\r\n    if(applicantList.length !== newComrade.length) {\r\n      socket.emit('GET_COMRADE_DETAIL', {token: localStorage.token});\r\n      socket.on('NEW_COMRADE_DETAIL', ({comrades}) => {\r\n        setNewComrade(comrades)\r\n      })\r\n    };\r\n    return function() {\r\n\r\n      const {main: {mainPlace, workPerson, personObj: {userData: {superId}}}} = store.getState();\r\n      if(person && superId === workPerson && mainPlace !== 'social') {\r\n        socket.emit('UNSUBSCRIBE_USER', {token: localStorage.token, personId: person.superId});\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  function onSelectUser(nickName) {\r\n    let userInd = [];\r\n    mineInd(users, nickName, 'nickName', userInd);\r\n\r\n    setPerson(users[userInd[0]])\r\n  };\r\n  function onSelectFriend(nickName) {\r\n    // ИНТЕГРИРУЙ сюда луп, который будет получать FRESH данные и сразу же обновлять.\r\n    // нет нет. При клике происходит подъем последних данных и подписывание на ВСЕ изменения. Не нужны лупы.\r\n    let friendInd = []; \r\n    mineInd(friends, nickName, ['userData', 'nickName'], friendInd);\r\n    \r\n    socket.emit('SUBSCRIBE_USER', {\r\n      token: localStorage.token, \r\n      personId: friends[friendInd[0]].userData.superId\r\n    });\r\n    socket.on('NEW_SUBSCRIBE_USER', ({friendObj}) => {\r\n      updateData({data: friendObj, address: 'friend'});\r\n      setPerson(friendObj.userData)\r\n    })\r\n  };\r\n\r\n  function onSendRequest() {\r\n    socket.emit('FRIEND_REQUEST', {token: localStorage.token, person})\r\n  };\r\n\r\n  let availableProjects = personDetail && personDetail.projects.filter(({access}) => access.includes(superId) || access.includes('all') )\r\n\r\n  function chooseHandler() {\r\n    if(availableProjects.length && isFriend) {\r\n\r\n      // Это делается, потому что этот чел мог что то настроить за время раздумий, а я спецем \r\n      // не обрабатывал эти вызовы.. (причина в необходимости перестраивать пол редюсера) так что \r\n      // дополнительный запрос;\r\n      socket.emit('SUBSCRIBE_USER', {\r\n        token: localStorage.token, \r\n        personId: personDetail.userData.superId\r\n      });\r\n      socket.on('NEW_SUBSCRIBE_USER', ({friendObj}) => {\r\n        changeMaster(false);\r\n        updateData({data: friendObj, address: 'friend'});\r\n        choosePerson(person.superId);\r\n      })\r\n\r\n\r\n \r\n      //!isFriend && previewPerson(personDetail);\r\n    } else {\r\n      openNotification({type: 'warning', message: 'Restriction', description: 'The user must have at least one project'})\r\n    }\r\n  };\r\n  function addCompadreHandl(superId) {\r\n    socket.emit('ACCEPT_REQUEST', {token:localStorage.token, personId: superId});\r\n    cleanApplicantList(superId);\r\n    setNewComrade(newComrade.filter(({superId:personId}) => personId !== superId ));\r\n  }\r\n\r\n  let postData = new FormData();\r\n\r\n  let personDetailIsLoaded = personDetail && (personDetail.userData.superId === person.superId);\r\n\r\n  return (\r\n    <>\r\n      <div className='social__chusedUser'>\r\n        {\r\n          person \r\n          ? <div className='social__chusedUser--WRAPPER'>\r\n              <div className='social__chusedUser_showProfile'>\r\n                {\r\n                  setPerson.src\r\n                  ? <div className='social__chusedUser_showProfile_avatar'>\r\n                      <img src={setPerson.src} alt=\"\"/>\r\n                    </div>\r\n                  : <div className='social__chusedUser_showProfile_avatar_plug'>\r\n                      {person.nickName.substring(0, 2)}\r\n                    </div>\r\n                }\r\n              </div>\r\n              {\r\n                isFriend &&\r\n                <div className='social__chusedUser_chuseProfile'> \r\n                  <Button clickHandler={() => {chooseHandler()}}>Choose profile</Button>\r\n                </div> \r\n              }\r\n              \r\n              { \r\n                !isFriend && \r\n                <div className='social__chusedUser_addToFriend'>\r\n                  <Button clickHandler={onSendRequest}>Add to comrades</Button>\r\n                </div>\r\n              }\r\n              <div className='social__chusedUser_projectCount'>\r\n                {personDetail && `Count of available projects: ${availableProjects.length}`}\r\n              </div>\r\n            </div>\r\n          : <div className='social__chusedUser_plug'>\r\n            Selected person\r\n          </div>\r\n        }\r\n      </div>\r\n      {\r\n        users &&  <div className='social__findUser'>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"Users\"\r\n          onSelect={onSelectUser}\r\n        >\r\n          {\r\n           users.map(({nickName}) => <Option value={nickName}>{nickName}</Option>)\r\n          }\r\n      \r\n        </Select>\r\n      </div>\r\n      }\r\n      <div className='social__findFriend'>\r\n        <Select\r\n          showSearch\r\n          style={{ width: '100%' }}\r\n          placeholder=\"Friends\"\r\n          onSelect={onSelectFriend}\r\n        >\r\n          {\r\n           friends.length && friends.map(({userData: {nickName}}) => <Option value={nickName}>{nickName}</Option>)\r\n          }\r\n        </Select>\r\n      </div>\r\n      <div className='social__requestToFriend'>\r\n        {\r\n          newComrade.length\r\n          ? <div className='social__requestToFriend_list'>\r\n              {newComrade.map(({nickName, src, projectCount, superId}) => {\r\n                return <AddToCompadre onAdd={addCompadreHandl} nickName={nickName} src={src} projectCount={projectCount} superId={superId} />\r\n              })}\r\n            </div>\r\n          : <div className='social__requestToFriend_plug'>\r\n              No requests\r\n            </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect((\r\n  {\r\n    main: {\r\n      friends, \r\n      personObj: {userData: {superId, applicantList}}, accessV, workPerson, friendV\r\n    }}) => (\r\n      {\r\n        friends, \r\n        superId, \r\n        applicantList, \r\n        L: applicantList.length, \r\n        fL: friends.length,\r\n        workPerson, \r\n        accessV, \r\n        friendV\r\n      }), \r\n{choosePerson, updateUsers, previewPerson, cleanApplicantList, updateData, changeMaster})(Social)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {socket} from '@/core'\r\n\r\nimport {Button} from '@/components'\r\n\r\nimport {logOut} from '@/actions'\r\n\r\nimport './Profile.scss'\r\n\r\nconst Profile = ({logOut}) => {\r\n\r\n  function logoutHandler () {\r\n    socket.emit('LOGOUT', {token: localStorage.token});\r\n    logOut()\r\n  }\r\n\r\n  return (\r\n    <div className='profile'>\r\n      <div className='profile__firstLine'>\r\n        <div className='profile__firstLine_space'>\r\n        </div>\r\n        <div className='profile__firstLine_btn'>\r\n          <Button clickHandler={logoutHandler}>LOGOUT</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(() => ({}), {logOut})(Profile)","import React, {useState, useRef, useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames';\r\nimport anime from 'animejs'\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n} from 'react-transition-group';\r\n\r\nimport {Button} from '@/components'\r\nimport {Editor, Project, Version, Social} from './elements'\r\nimport Profile from './Profile'\r\n\r\nimport {openPlace} from '@/actions'\r\n\r\nimport './Main.scss';\r\n\r\nconst Main = ({mainPlace, openPlace}) => {\r\n  const [component, setComponent] = useState([{name: null, payload: <div></div>}]);\r\n  useEffect(() => {\r\n    if(component[0].name !== mainPlace) {\r\n      let newPayload;\r\n      switch(mainPlace) {\r\n        case 'editor':\r\n          newPayload = (\r\n            <div className={classNames('editor')}>\r\n              <Editor />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'project':\r\n          newPayload = (\r\n            <div className={classNames('project')}>\r\n              <Project isSetup={false} />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'version':\r\n          newPayload = (\r\n            <div className={classNames('version')}>\r\n              <Version />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'setup':\r\n          newPayload = (\r\n            <div className={classNames('project')}> \r\n              <Project isSetup={true} />\r\n            </div>\r\n          )\r\n        break;\r\n        case 'beginner':\r\n          newPayload = (\r\n            <div className={classNames('beginner')}>\r\n              <Button clickHandler={() => openPlace('project')}>CREATE YOUR FIRST PROJECT</Button> \r\n            </div>\r\n          )\r\n        break\r\n        case 'social':\r\n          newPayload = (\r\n            <div className={classNames('social')}>\r\n              <Social />\r\n            </div>\r\n          );\r\n        break\r\n        case 'choose':\r\n          newPayload = (\r\n            <div className='choose'>\r\n              Choose project\r\n            </div>\r\n          )\r\n        break\r\n        case 'error':\r\n          newPayload = (\r\n            <div className='error'>\r\n              Project, version or pod was deleted, rechoose project.\r\n            </div>\r\n          )\r\n        break\r\n        case 'profile': \r\n        newPayload = (\r\n          <div className='profile'>\r\n            <Profile />\r\n          </div>\r\n        )\r\n        break\r\n        default:\r\n\r\n      }\r\n      setComponent([{name: mainPlace, payload: newPayload}])\r\n    }\r\n  })\r\n\r\n  // Подключить аниме и пробовать делать систему.\r\n  return(\r\n    <div className='main'>\r\n       {component[0].payload}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {mainPlace}})=> ({mainPlace}), {openPlace})(Main)\r\n\r\n{/* {component.payload}  */}\r\n{/* <div className='main'>\r\n      <div className={classNames('editor', mainPlace === 'editor' ? 'editor-show' : 'editor-hide')}>\r\n        <Editor />\r\n      </div>\r\n      <div className={classNames('project', mainPlace === 'project' ? 'project-show' : 'project-hide')}>\r\n        <Project isSetup={false} />\r\n      </div>\r\n      <div className={classNames('version', mainPlace === 'version' ? 'version-show' : 'version-hide')}>\r\n        <Version />\r\n      </div>\r\n      <div className={classNames('project', mainPlace === 'setup' ? 'setup-show' : 'setup-hide')}> \r\n        <Project isSetup={true} />\r\n      </div>\r\n      <div className={classNames('beginner', mainPlace === 'beginner' ? 'beginner-show' : 'beginner-hide')}>\r\n        <Button clickHandler={() => openPlace('project')}>CREATE YOUR FIRST PROJECT</Button> \r\n      </div>\r\n      <div className={classNames('social', mainPlace === 'social' ? 'social-show' : 'social-hide')}>\r\n        <Social />\r\n      </div>\r\n      \r\n    </div> */}","import React from 'react'\r\n\r\nimport {Input} from '@/components'\r\n\r\nconst Navbar_Branch = () => {\r\n  function branchInputHandl(ev) {\r\n    ev.persist()\r\n    //console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  }\r\n  // function branchSaveHandl(ev) {\r\n  //   ev.persist();\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n  // function branchShowHandl(ev) {\r\n  //   ev.persist();\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n  return(\r\n    <div className='navbar__branch'>\r\n      <div className='navbar__branch_podsInput'>\r\n        <Input \r\n          place=\"navbar\"\r\n          placeholder={'Pods height (SOON)'} \r\n          changeHandler={branchInputHandl}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar_Branch;","// Добавит поля в форму создания. MetaData. Allowed\r\n// Установить поля селектора по дефолту в ноль, и автоматически формироовать список с наиболее используемых\r\n\r\n// БАГ. Не обновляется состояние выбранного проекта, после выброса. Лечится рестартом... Причина скорее\r\n// всего в том, что компоненты не до конца управляемы. Хранят старые состояния...\r\nimport React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames'\r\n\r\nimport {Input, Button} from '@/components'\r\nimport {Dropdown,Menu} from 'antd'\r\n\r\nimport {mineInd} from '@/utils'\r\n\r\nimport {addProject, openPlace, selectProject, selectVersion, changeMaster} from '@/actions'\r\n\r\nconst Navbar_Main = (\r\n  {\r\n    projects, \r\n    superAccessed,\r\n    isOwner,\r\n    selectProject, \r\n    selectVersion, \r\n    projectId, \r\n    workVersion,\r\n    openPlace,\r\n    changeMaster\r\n  }) => {\r\ndebugger //changeMaster(false)\r\n  //const {projectId, workVersion} = workPCD || {projectId: null, workVersion: null}\r\n  //const [projectsDrop, setProjectsDrop] = useState(null)\r\n  //const [checkData, setCheckData] = useState({cpId: null, cpL: null})\r\n  //const [currentProject, setCurrentProject] = useState(null)\r\n\r\n  // function projectsSubmitHandl(ev) {\r\n  //   ev.persist()\r\n  // }\r\n  // function projectsPickHandl(ev) {\r\n  //   ev.persist()\r\n  // }\r\n  // function projectsInputHand(ev) {\r\n  //   ev.persist()\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev.tarrget.value)\r\n  // }\r\n  // function projectsShowHandl(ev) {\r\n  //   ev.persist()\r\n  //   setShowProjects(!showProjects)\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n  // function savesShowHandl(ev) {\r\n  //   ev.persist();\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n  // function mapShowHandl(ev) {\r\n  //   ev.persist();\r\n  //   console.log('%c%s', 'color: blue; font-size: 12px;', 'EV:', ev)\r\n  // }\r\n\r\n\r\n  // function pickElemHandl(ev) {\r\n  //   let key = ev.key;\r\n  //   console.log('Picked project ind: ', key)\r\n  // }\r\n\r\n\r\n  let projectInd = undefined;\r\n  for(let i=0;i<projects.length;i++) {\r\n    if(projects[i].superId === projectId) {\r\n      projectInd = i;\r\n    }\r\n  };\r\n  let versionInd = undefined;\r\n  if(projectInd !== undefined) {\r\n    for(let i in projects[projectInd].versions) {\r\n      if(projects[projectInd].versions[i].superId === workVersion) {\r\n        versionInd = i;\r\n      }\r\n    }\r\n  }\r\n  // const {cpId, cpL} = checkData; \r\n  // useEffect(() => {\r\n  //   if(projectsDrop === null || cpId !== projectId || cpL !== projects.length) {\r\n  //     const drop = \r\n  //     ;\r\n\r\n  //   batch(() => {\r\n  //     setProjectsDrop(drop);\r\n  //     setCheckData({cpId: projectId, cpL: projects.length})\r\n  //   })\r\n  //   }\r\n  // })\r\n  \r\n// ребилдни PCD там должен быть uuid в индикаторе версии\r\n  function makeMenu({data, addHandler, current, selectHandl}) { \r\n    let itemsArr = data.map(({name, date, superId, comment=false}, i) => {\r\n      return (\r\n        <Menu.Item \r\n          key={superId+''} \r\n          className={classNames(superId === current && 'ant-menu-item-selected')}\r\n          >\r\n          <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n            <span>{comment ? comment : name}</span>\r\n            <span>{date}</span>\r\n          </div>\r\n        </Menu.Item>)\r\n    })\r\n    let curProjectInd = current+'';\r\n    return (\r\n      <div className=\"setuper\" style={{width: '100%', display: \"flex\", flexDirection: 'column'}}>\r\n        {\r\n          isOwner &&\r\n          <div>\r\n            <Button clickHandler={addHandler}>\r\n              ADD NEW\r\n            </Button>\r\n          </div>\r\n        }\r\n        <Menu \r\n          onSelect={selectHandl}\r\n          > \r\n          {itemsArr}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className='navbar__mainActions'>\r\n      <div className='navbar__mainActions_projects'>\r\n        <Dropdown \r\n          overlay={makeMenu({\r\n            data: projects, \r\n            addHandler: () => {openPlace('project')}, \r\n            current: projectId,\r\n            selectHandl: (ev) => {selectProject(ev.key); changeMaster(false)}})} \r\n          onVisibleChange={(ev) => console.log('OnVisibleChange', ev)}>\r\n          <div><Input  \r\n            place='navbar' \r\n            placeholder={(projects.length && projectInd !== undefined) \r\n              ? projects[projectInd].name \r\n              : projects.length\r\n                ? \"Choose some-thing\"\r\n                : \"Let's create some-thing\" } /></div>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='navbar__mainActions_saves'>\r\n        {\r\n         (projects.length && projectInd !== undefined)\r\n         ? <Dropdown \r\n            overlay={makeMenu({\r\n              data:projects[projectInd].versions , \r\n              addHandler: () => {openPlace('version')}, \r\n              current: workVersion,\r\n              selectHandl: (ev) => {selectVersion(ev.key); changeMaster(false)}})}>\r\n            <div><Input place='navbar' placeholder={projects[projectInd].versions[versionInd].comment}/></div>\r\n          </Dropdown>\r\n        : <Input place='navbar' placeholder='Nonee'/>\r\n        }\r\n      </div>\r\n      {\r\n        projectId && \r\n        <>  \r\n          {\r\n            superAccessed &&\r\n            <div className='navbar__mainActions_secure'>\r\n              <Button place='navbar' clickHandler={() => openPlace('setup')}>\r\n                Setup\r\n              </Button>\r\n            </div>\r\n          }\r\n          <div className='navbar__mainActions_map'>\r\n            <Button place='navbar' clickHandler={() => openPlace('map')}>\r\n                Map\r\n            </Button> \r\n          </div>\r\n        </>\r\n      }\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n//\r\nexport default connect(\r\n  ({main: { projects, workPCD, workBranch, personObj, workPerson}}) => {\r\n    let superAccessed = false;\r\n\r\n    const checkAccess = accesses => accesses.includes(personObj.userData.superId) || accesses.includes('all');\r\n\r\n    if(workPCD) {\r\n      let projectInd = []; \r\n      mineInd(projects, workPCD.projectId, 'superId', projectInd);\r\n      superAccessed = checkAccess(projects[projectInd[0]].superAccess)\r\n    };\r\n\r\n    return {\r\n      projects: projects.filter(({access}) => checkAccess(access)),\r\n      projectId: workPCD ? workPCD.projectId : null,\r\n      workVersion: workPCD ? workPCD.workVersion : null,\r\n      superAccessed,\r\n      isOwner: workPerson === personObj.userData.superId,\r\n      v: workBranch.v\r\n    }\r\n  }, \r\n  {addProject, openPlace, selectProject, selectVersion, changeMaster})(Navbar_Main)","// Компонент отвечает за возвращение домой, причем, с поднятием новых данных о проектах,\r\n// Если кто-то что-то поменял пока владельца не было дома.\r\n\r\n// Так же здесь будут кнопки для быстрого доступа к проектам друзей\r\n\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport {socket} from '@/core'\r\nimport {openNotification} from '@/utils'\r\n\r\nimport {Button} from '@/components'\r\n\r\nimport {openPlace, chooseMe, updateData, choosePerson, changeMaster} from '@/actions'\r\n\r\nconst Navbar_Social = (\r\n  {\r\n  personObj, \r\n  workPerson,\r\n  friends, \r\n  openPlace, \r\n  chooseMe, \r\n  updateData, \r\n  choosePerson, \r\n  changeMaster\r\n}) => {\r\n\r\n\r\n  function chooseMeHanler() {\r\n    let mySuperId = personObj.userData.superId;\r\n    if(workPerson !== mySuperId) {\r\n      socket.emit('GET_USERS_DETAIL', {token: localStorage.token, personId: mySuperId});\r\n      socket.on('NEW_USERS_DETAIL', ({user}) => {\r\n        if(user.userData.superId === mySuperId) { // возможно эта проверка не нужна\r\n          chooseMe(user.projects)\r\n        }\r\n      })\r\n    } else {\r\n      openPlace('profile')\r\n    }\r\n    //\r\n  }\r\n\r\n  function chooseFriendHandler(personId) {\r\n    socket.emit('SUBSCRIBE_USER', {\r\n      token: localStorage.token, \r\n      personId\r\n    });\r\n    socket.on('NEW_SUBSCRIBE_USER', ({friendObj}) => {\r\n      const me = personObj.userData.superId;\r\n      if(friendObj.projects.some(({access}) => access.includes(me) || access.includes('all'))) {\r\n        changeMaster(false);\r\n        updateData({data: friendObj, address: 'friend'});\r\n        choosePerson(personId);\r\n      } else {\r\n        openNotification({type: 'error', message: 'Error', description:\"Friend don't provide accesses\"})\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  const avatarComp = (person, alt, me=false) => person.userData.src \r\n    ? <div className='avatar'><img src=\"\" alt=\"\"/></div>\r\n    : <div className={classNames('avatar_alt',me && 'avatar_alt_me')}> {alt} </div>\r\n\r\n\r\n  return (\r\n    <div className='navbar__social'>\r\n      <div className='navbar__social_fastAccess'>\r\n        {\r\n          friends.length\r\n          ? <div className='friendsList'> \r\n            {friends.slice(0, 2).map((friend) => {\r\n              return <div onClick={() => chooseFriendHandler(friend.userData.superId)}>\r\n                {avatarComp(friend, friend.userData.nickName.substring(0, 2))}\r\n              </div>\r\n            })}\r\n            </div>\r\n          : 'Fast access place...'\r\n        }\r\n        \r\n      </div>\r\n      <div className='navbar__social_details'>\r\n        <Button place='navbar' clickHandler={() => openPlace('social')}>\r\n          Details\r\n        </Button>\r\n      </div>\r\n      <div className='navbar__social_me' onClick={chooseMeHanler}>\r\n        {\r\n          personObj && avatarComp(personObj, 'I', true)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {friends, personObj, workPerson}}) => ({friends, personObj, workPerson}), \r\n  {openPlace, chooseMe, updateData, choosePerson, changeMaster})(Navbar_Social);","import React, {lazy} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Navbar_Branch, Navbar_Main, Navbar_Social} from './elements'\r\n\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = () => {\r\n  \r\n  return (\r\n    <div className='navbar'>\r\n      <Navbar_Branch />\r\n      <Navbar_Main/>\r\n      <Navbar_Social/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = state => {\r\n\r\nreturn {\r\n  state\r\n}\r\n},\r\n\r\nmapDispatch = dispatch => {\r\n\r\n  return {\r\n\r\n  }\r\n}\r\nexport default connect(mapState, mapDispatch)(Navbar)","  // нужно организовать точечную модификацию по высоте и хранилище всех подов..\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Pod, Button} from '@/components'\r\n\r\nimport {addPod, deletePod, choosePod, changeBranch, changeMaster} from '@/actions'\r\nimport {mineInd} from '@/utils'\r\n\r\nimport './Branch.scss'\r\n\r\nconst Branch = (\r\n  {\r\n    workBranch, \r\n    master,\r\n    workPCD, \r\n    accessed, v, \r\n    addPod, \r\n    deletePod, \r\n    choosePod, \r\n    currentHeight, \r\n    changeBranch, \r\n    changeMaster\r\n  }) => {\r\n\r\n  let resData = workBranch.branch.base\r\n  ? (workBranch.branch.base)\r\n  .concat(workBranch.branch.question ? [workBranch.branch.question] : []) //\r\n  : [];\r\n  // нужно организовать точечную модификацию по высоте и хранилище всех подов..\r\n\r\n  let realResData = resData.map(({coord:{height}, label, main}) => {\r\n    return <Pod \r\n      onAction={podAction}\r\n      readOnly={!accessed} \r\n      actived={currentHeight==height} \r\n      label={label} \r\n      main={main} \r\n      height={height} \r\n      onPlus={addPod}\r\n      onDelete={deletePod}\r\n      onChoose={choosePod}\r\n      showDelete={resData.length > 1}\r\n      />\r\n  })\r\n  const noMaster = master === null\r\n  function podAction() {\r\n    noMaster && changeMaster(true);\r\n  }\r\n  //ebugger\r\n  return(\r\n    <div className='branchWrapper'>\r\n      <div className='branch' >\r\n      {realResData.length > 0\r\n      ? <div className='branch__wrapper'>\r\n          {realResData}\r\n        </div>\r\n      : <div className=\"branch__plug\">\r\n          Projects pods...\r\n        </div>\r\n      }\r\n    \r\n      </div>\r\n      {\r\n      workBranch.pos && workBranch.pos.length > 1 &&\r\n      <div className='branch__goBackPlace'>\r\n        <div className='branch__goBackPlace_button'>\r\n          <Button clickHandler={() => changeBranch('back')} place='navbar'>Cross back</Button>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {workBranch, workPCD, projects, personObj}}) => {\r\n  let accessed = false,\r\n  master = null;\r\n  const nickName = personObj.userData.nickName;\r\n  if(workPCD) {\r\n    let projectInd = [];\r\n    let versionInd = [];\r\n    \r\n    mineInd(projects, workPCD.projectId, 'superId', projectInd);   \r\n    mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd);\r\n    master = projects[projectInd[0]].versions[versionInd[0]].master;\r\n\r\n    const targetAccess = projects[projectInd[0]].superAccess;\r\n    if(targetAccess.includes(personObj.userData.superId) || targetAccess.includes('all')) {\r\n      if(master === null || master === nickName) {\r\n        accessed = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    workBranch, \r\n    v: workBranch.v, \r\n    workPCD, \r\n    master,\r\n    currentHeight: workPCD ? workPCD[workPCD.workVersion].height: null,\r\n    accessed\r\n  }\r\n}, {addPod, deletePod, choosePod, changeBranch, changeMaster})(Branch);","import React, {useRef, useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport {fetchUserData, userLogin, autoLoginWithToken, createUser} from '@/actions'\r\n\r\nimport {Button, CheckTags, Input} from '@/components';\r\nimport {message} from 'antd'\r\n\r\nimport './Login.scss'\r\n\r\nconst Login = ({fetchUserData, userLogin, autoLoginWithToken, createUser}) => {\r\n  const login = useRef(null),\r\n  [show, setShow] = useState(null),\r\n  [workPlace, setWorkPlace] = useState('create'),\r\n  [data, setData] = useState({nickName: '', password: '', secondPassword: ''}),\r\n  {nickName, password, secondPassword} = data;\r\n\r\n  const AT = ({children, src}) => {\r\n\r\n    return <span \r\n      onMouseEnter={() => setShow(src)} \r\n      onMouseLeave={() => setShow(null)}\r\n      className='activeText'>{children}\r\n      </span>\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('SHOW:', show)\r\n    // сделать приколюху с видимостью Логина;\r\n    // здесь запускается автоматический входе, если есть токен.\r\n    localStorage.token && autoLoginWithToken()\r\n  })\r\n\r\n  function submitHandl(ev) {\r\n    ev.preventDefault();\r\n    let errors = false;\r\n    if(password.length < 3) {\r\n      errors = true;\r\n      message.error('Password too short')\r\n    };\r\n    if (nickName.length < 3) {\r\n      errors = true;\r\n      message.error('NickName too short')\r\n    }\r\n\r\n    if(workPlace === 'create') {\r\n      \r\n      if (password !== secondPassword) {\r\n        errors = true;  \r\n        message.error('Passwords are not equal')\r\n      } \r\n      !errors && createUser(data)\r\n    } else {\r\n      !errors && userLogin(data);\r\n    }\r\n    //fetchUserData()\r\n    // const {nickName, password} = localStorage;\r\n    // let fakeData = {nickName, password};\r\n    // console.log(fakeData)\r\n    //setShow(!show)\r\n  }\r\n\r\n  let checkTagsProps = {\r\n    firstVal: 'LOGIN',  \r\n    firstHandler: () => setWorkPlace('login'), \r\n    secondVal: 'CREATE NEW', \r\n    secondHandler:() => setWorkPlace('create'), \r\n    checkData: workPlace === 'login'\r\n  }\r\n\r\n const prefix = window.location.origin+'/uploads/';\r\n  return( \r\n    <div ref={login} className={classNames('login')}>\r\n      {\r\n        show &&\r\n        <div className='help'>\r\n          <img  src={prefix+show} />\r\n        </div>\r\n      }\r\n\r\n      <div className='login__header'>\r\n        <div className='login__header_main'>\r\n          {\"DecodeMe\"}\r\n        </div>\r\n        <div className='login__header_dls'>\r\n          {\"Editor (alpha)\"}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='achtung'>\r\n        <div className='achtung__header'>\r\n          <h1>Achtung! </h1>\r\n          <div className='achtung__header_help'>Зеленый текст интерактивен.</div>\r\n        </div>\r\n        <div className='achtung__payload'>\r\n        {\"В случае возникновения проблем прошу сохранять спокойствие,  \"}\r\n        <AT src={'devtools.png'}>открыть инструменты разработчика</AT> \r\n        {\" и выбрать\"} <AT src={'console.png'}>вкладку с консолью.</AT> \r\n        {\" После чего написать в консоль: \"}\r\n        <AT src={'code.png'}>{`window.sendErrors(\"Любой ваш комментарий.\r\n        Главное что бы он был в ковычках\")`}</AT>{` Как только \r\n        закончите вводить нажмите Enter.\r\n        Самое время испытать себя в роли разработчика). Меня всегда можно найти `}\r\n        <a target=\"_blank\" className='me' href='https://vk.com/es_ilias'>здесь</a>.\r\n \r\n        </div>\r\n      </div>\r\n      <div className='login__main'>\r\n        <CheckTags {...checkTagsProps}/>\r\n        <form onSubmit={submitHandl}>\r\n          <div className={classNames('form')}>\r\n              <Input \r\n                placeholder={'Nickname'} \r\n                changeHandler={ev => {ev.persist(); setData({...data, nickName: ev.target.value})}} \r\n                value={nickName} />\r\n            </div>\r\n            <div className={classNames('form', 'form__password')}>\r\n              <Input\r\n                isPassword={true}\r\n                placeholder={'Password'} \r\n                changeHandler={ev => {ev.persist(); setData({...data, password: ev.target.value})}} \r\n                value={password} />\r\n            </div>\r\n            {\r\n              workPlace === 'create' && \r\n              <div className={classNames('form', 'form__password')}>\r\n                <Input\r\n                isPassword={true}\r\n                placeholder={'Password confirm'} \r\n                changeHandler={ev => {ev.persist(); setData({...data, secondPassword: ev.target.value})}} \r\n                value={secondPassword} />\r\n              </div>\r\n            }\r\n            <div className='login__main_submit'>\r\n              <Button clickHandler={submitHandl} htmlType=\"submit\">\r\n                SEND DATA\r\n              </Button>\r\n            </div>\r\n        </form>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({}) => ({}), \r\n{fetchUserData, userLogin, autoLoginWithToken, createUser})(Login)\r\n","// у мапы есть выбранный элемент, в котором будет бренч дирекшн дата\r\n// есть инпуты для быстрых перемещений (при огромных вложенностях)\r\n// при выборе проекта или ветви, ворк плейс остается на мапе. Помолимся богу производительности.\r\n\r\n// модифицирование сети это ультра лейт... Легче заново собрать.\r\nimport React, {useState, useEffect, cloneElement} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {boostWorker, WebWorker, mineInd, fakeWorker} from '@/utils'\r\n\r\nimport {Leaf} from '@/components'\r\n\r\nimport {setMapData, changeBranch} from '@/actions'\r\n\r\nimport './Map.scss'\r\n\r\n\r\nconst MapBase = ({workPCD, projects, mapStore, mapGrid, mapCurrent, setMapData, workPos, changeBranch}) => {\r\n  const [main, setMain] = useState([])\r\n  debugger\r\n  useEffect(() => {\r\n\r\n    if(mapStore == false) { // новые данные, мапы ликвидированы\r\n\r\n      //const worker = new WebWorker(boostWorker);\r\n      \r\n      let projectInd = [];\r\n      mineInd(projects, workPCD.projectId, 'superId', projectInd)\r\n      let versionInd = [];\r\n      mineInd(projects[projectInd[0]].versions, workPCD.workVersion, 'superId', versionInd)\r\n      \r\n      let natVersion = projects[projectInd[0]].versions[versionInd[0]].data;\r\n\r\n      // Делаю фабрику, при создании компонента прилетает мапина дата (массив с React элементами)\r\n      //, а так же сам Грид, если доживают до этого момента)) при их существовании, происходит поиск местоположения\r\n      // старого по выбранности элемента и нового ---> происходит модификация и ресборка МАПЫ. Привет шашки)\r\n\r\n      fakeWorker(natVersion).then(ev => {\r\n        let mapCurrent = workPos;\r\n        debugger\r\n        let mapGrid = ev.data.grid.slice();\r\n        let mapStore = ev.data.grid.map((line, h) => {\r\n          return line.map(({data}) => {\r\n            return <Leaf clickHandler={() => changeBranch(data.pos)} data={data} current={(data?.pos ?? null) === mapCurrent} />\r\n          })\r\n        });\r\n        console.timeEnd()\r\n        setMapData({mapGrid, mapStore, mapCurrent})\r\n        setMain(mapStore.map(line => (<div className='map__line'>{line}</div>)))\r\n\r\n      })\r\n      // worker.onmessage = function(ev) {\r\n      //   //setMain(main);\r\n      // }\r\n      // прогон данных проекта и навешивание высот c выводом в виде 2D []\r\n      console.time()\r\n      \r\n    } else if(mapCurrent !== workPos) { // модификация существующих мап и диспатч новых данных СБОРА НЕТ\r\n      let oldCoord = {};\r\n      let newCoord = {}; // Поиск координат и модификация по их адресам\r\n      mapGrid.forEach((line, h) => {\r\n        line.forEach(({data}, l) => {\r\n          if(data?.pos === workPos) {\r\n            newCoord = {h, l}\r\n          }\r\n          if(data?.pos === mapCurrent) {\r\n            oldCoord = {h, l}\r\n          }\r\n        })\r\n      })\r\n      const {h: oH, l: oL} = oldCoord; const {h: nH, l: nL} = newCoord;\r\n      mapStore[oH][oL] = cloneElement(mapStore[oH][oL], {current: false});\r\n      mapStore[nH][nL] = cloneElement(mapStore[nH][nL], {current: true});\r\n      setMapData({mapGrid, mapStore, mapCurrent: workPos});\r\n      setMain(mapStore.map(line => (<div className='map__line'>{line}</div>)))\r\n    }  // если скидываются данные, все должно просто перерисоваться, до нового скидывания)\r\n  })\r\n\r\n  return (\r\n    <div className='map'>\r\n      <div className='map__top'>\r\n        <div className='map__top_space'>\r\n\r\n        </div>\r\n        <div className='map__top_mainPart'>\r\n         \r\n          <div className='map__top_mainPart_wrapper'>\r\n            <div className='map__top_mainPart_space'></div>\r\n            <div className='map__top_mainPart_wrapper_row'>\r\n              <div> {main}</div>\r\n              <div className='map__top_mainPart_space_row'>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='map__top_space'>\r\n\r\n        </div>\r\n      </div>\r\n      <div className='map__bottom'>\r\n        <div className='map__bottom_space'>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({main: {workPCD, projects, mapStore, mapGrid, mapCurrent}}) => ({\r\n  workPCD, projects, mapStore, mapGrid, mapCurrent, workPos: workPCD[workPCD.workVersion].path,\r\n}), {setMapData, changeBranch})(MapBase) ;\r\n","export default function(ev) {\r\n  debugger\r\n  let superData = ev; // источник даты, которые модифится, \r\n  let boost = 0;\r\n  let maxPath = '';\r\n  let grid = []; // просто плаг\r\n\r\n  function promiseLessSeries(arrOfFunc) { // последовательный вызов (Хз чего я боюсь, просто с этим спокойней)\r\n    let i = 0;\r\n    while(i < arrOfFunc.length) {\r\n      arrOfFunc[i]();\r\n      i++;\r\n    }\r\n  };\r\n  async function checker(isModif, isBoost, data = superData) { // проверяет есть ли в дате вопросы\r\n    // и действует в зависимости от ситуации)\r\n    \r\n    let branch = data.branch; \r\n    let choses = branch.choseCount; // число вопросов в ветке.\r\n    let sery = []; // здесь собираются функции.\r\n    let i = 0;\r\n\r\n    isModif && findAndSet({path: data.pos, height: branch.boost, data});\r\n\r\n    if(choses !== 0) { // если есть вопросы, то создается новыя серия(данные по адрессам вопрос)\r\n      // и прогоняетяс через чекер\r\n      while(i < choses) {\r\n        sery.push(branch['q'+i])\r\n        i++\r\n      }\r\n      let funcArr = sery.map((branch, i) => {\r\n        return function() {\r\n          checker(isModif, isBoost, branch)\r\n        }\r\n      });\r\n      promiseLessSeries(funcArr) // проход в другие ветки\r\n\r\n      isBoost && (() => { // поиск исключения нижней ветки (она всегда прежата ко дну) \r\n        if(data.pos.split('').every(el => el===\"0\")) { // check if this bottom\r\n          branch.boost = 0;\r\n        } else { // прокидывание буста в те позиции, где есть есть вопросы ---> зависимость от центрального элемента\r\n          branch.boost = branch['q'+~~((choses%2===0 ? (choses-1) : choses)/2)].branch.boost;\r\n        };\r\n      })()\r\n\r\n\r\n    } else { // наткнулся на ласт элемент, в котором нет вопроса, просто база\r\n    \r\n      isBoost && (() => { // \r\n        branch['boost'] = boost; // стандартный буст\r\n        boost++;\r\n        if(maxPath.length < data.pos.length) { // проверка на максимальную длину ветки\r\n          maxPath = data.pos\r\n        }\r\n      })()\r\n      //console.log(this)\r\n    };\r\n    \r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    (function updater() {\r\n      checker(false, true).then(() => {\r\n        // создание сетки на основе предельных данных this.boost (высота) и this.maxPath (ширина)\r\n        grid = Array(boost).fill('').map(() => []).map(() => Array(maxPath.length).fill('').map(() => ({data: null})));\r\n  \r\n        checker(true, false).then(() => {\r\n          grid = grid.reverse();\r\n  \r\n          resolve({data: {grid}});\r\n        })\r\n      })\r\n        \r\n    })()\r\n  })\r\n\r\n  function findAndSet({path, height, data}) {\r\n    grid[+height][path.length-1].data = data;\r\n  }\r\n}","// докинь нормальных анимация перехода с логина на рп\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Branch, Notes, Navbar, Map, Main, Login} from '@/containers' //Login as DefLogin\r\n\r\nimport './Base.scss';\r\n//const isMobile = /Mobile|webOS|BlackBerry|IEMobile|MeeGo|mini|Fennec|Windows Phone|Android|iPad|od|hone)/i.test(navigator.userAgent);\r\n//const Login = React.lazy(() => import('@/containers/Login'));\r\nconst Base = ({projects, mainPlace}) => {\r\n   //const [login, setLogin] = useState({setted: false, payload: null});\r\n   //const [showLazy, setShowLazy] = useState(false);\r\n  // console.log('DEBUG', projects) //<Login />\r\n  // const isMobile = /Mobile|webOS|BlackBerry|IEMobile|MeeGo|mini|Fennec|Windows Phone|Android|iP(ad|od|hone)/i.test(navigator.userAgent);\r\n  \r\n  // useEffect(() => {\r\n  //   let saveProject = JSON.stringify(Login);\r\n  //   console.log('STRINGIFY_LOGIN:', saveProject)\r\n  //   if(!login.setted) {\r\n  //     if(!isMobile) {\r\n  //       setLogin({payload: <Suspense fallback={<p></p>}><Login /></Suspense>, setted: true});\r\n  //     } else {\r\n\r\n  //     }\r\n  //   }\r\n  // })\r\n    // return(\r\n    //   <>\r\n    //     {\r\n    //       showLazy \r\n    //       ? <Suspense fallback={null}><Login /></Suspense>\r\n    //       : <div>PLUG</div>\r\n    //     }\r\n    //     <Button clickHandler={() => setShowLazy(!showLazy)}>Change</Button>\r\n    //   </>\r\n    // )\r\n\r\n   \r\n\r\n  return(\r\n    <>\r\n      {\r\n        projects \r\n      ?\r\n        <section className='base'>\r\n          <Navbar />\r\n          <div className='base__mainPart'>\r\n            <Branch />\r\n            <div className='base__workPlace'>\r\n                {\r\n                  mainPlace === 'map'\r\n                  ? <Map />\r\n                  : <>\r\n                      <Main />\r\n                      <Notes />\r\n                    </>\r\n                }\r\n                </div>\r\n          </div>\r\n        </section>\r\n      :\r\n        <section className='auth'>\r\n          <Login />\r\n        </section>\r\n      }\r\n    </>\r\n  )\r\n  \r\n  \r\n}\r\n\r\nexport default connect(({main: {projects, mainPlace}}) => ({projects, mainPlace}), {})(Base)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport store from '@/store'\r\n\r\nimport { Base } from '@/pages';\r\n\r\nimport '@/styles/index.scss';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <Base />\r\n</Provider>, \r\ndocument.querySelector('#root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}